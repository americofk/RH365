{"version":3,"file":"project-category-form.js","sourceRoot":"","sources":["../../../TS/ProjectCategories/project-category-form.ts"],"names":[],"mappings":"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","sourcesContent":["// ============================================================================\n// Archivo: project-category-form.ts\n// Proyecto: RH365.WebMVC\n// Ruta: TS/ProjectCategories/project-category-form.ts\n// Descripción: \n//   - Formulario dinámico para Crear/Editar Categorías de Proyecto\n//   - Tab General: Campos de negocio en LAYOUT DE 2 COLUMNAS\n//   - ComboBox para selección de Proyecto (ProjectRefRecID)\n//   - Tab Auditoría: Campos ISO 27001 en 1 columna\n//   - Labels a la izquierda de los campos\n// ============================================================================\n\n(function () {\n    // ========================================================================\n    // CONFIGURACIÓN GLOBAL Y CONTEXTO\n    // ========================================================================\n    const w: any = window;\n    const d: Document = document;\n    const $: any = w.jQuery || w.$;\n\n    const apiBase: string = w.RH365.urls.apiBase;\n    const pageContainer = d.querySelector(\"#project-category-form-page\");\n\n    if (!pageContainer) return;\n\n    const token: string = pageContainer.getAttribute(\"data-token\") || \"\";\n    const dataareaId: string = pageContainer.getAttribute(\"data-dataarea\") || \"DAT\";\n    const userRefRecID: number = parseInt(pageContainer.getAttribute(\"data-user\") || \"0\", 10);\n    const recId: number = parseInt(pageContainer.getAttribute(\"data-recid\") || \"0\", 10);\n    const isNew: boolean = pageContainer.getAttribute(\"data-isnew\") === \"true\";\n\n    // ========================================================================\n    // INTERFACES Y TIPOS\n    // ========================================================================\n\n    interface FieldConfig {\n        field: string;\n        label: string;\n        type: 'text' | 'number' | 'date' | 'datetime' | 'textarea' | 'select' | 'checkbox';\n        required?: boolean;\n        maxLength?: number;\n        options?: { value: string; text: string }[];\n        placeholder?: string;\n        helpText?: string;\n        readonly?: boolean;\n        column?: 'left' | 'right';\n        loadOptionsFrom?: string; // URL para cargar opciones dinámicamente\n    }\n\n    // ========================================================================\n    // DEFINICIÓN DE CAMPOS - TAB GENERAL\n    // ========================================================================\n    const businessFields: FieldConfig[] = [\n        // COLUMNA IZQUIERDA\n        {\n            field: 'CategoryName',\n            label: 'Nombre Categoría',\n            type: 'text',\n            required: true,\n            maxLength: 200,\n            placeholder: 'Ej: Desarrollo Software',\n            column: 'left'\n        },\n        {\n            field: 'LedgerAccount',\n            label: 'Cuenta Contable',\n            type: 'text',\n            maxLength: 50,\n            placeholder: '1.01.001',\n            column: 'left'\n        },\n\n        // COLUMNA DERECHA\n        {\n            field: 'ProjectRefRecID',\n            label: 'Proyecto',\n            type: 'select',\n            required: true,\n            options: [], // Se cargan dinámicamente\n            loadOptionsFrom: 'Projects/enabled',\n            column: 'right'\n        },\n        {\n            field: 'ProjectCategoryStatus',\n            label: 'Estado',\n            type: 'select',\n            required: true,\n            options: [\n                { value: 'true', text: 'Activo' },\n                { value: 'false', text: 'Inactivo' }\n            ],\n            column: 'right'\n        }\n    ];\n\n    // ========================================================================\n    // DEFINICIÓN DE CAMPOS - TAB AUDITORÍA\n    // ========================================================================\n    const auditFields: FieldConfig[] = [\n        {\n            field: 'RecID',\n            label: 'RecID (Clave Primaria)',\n            type: 'number',\n            readonly: true,\n        },\n        {\n            field: 'ID',\n            label: 'ID Sistema',\n            type: 'text',\n            readonly: true,\n        },\n        {\n            field: 'DataareaID',\n            label: 'Empresa (DataareaID)',\n            type: 'text',\n            readonly: true,\n        },\n        {\n            field: 'CreatedBy',\n            label: 'Creado Por',\n            type: 'text',\n            readonly: true,\n        },\n        {\n            field: 'CreatedOn',\n            label: 'Fecha de Creación',\n            type: 'datetime',\n            readonly: true,\n        },\n        {\n            field: 'ModifiedBy',\n            label: 'Modificado Por',\n            type: 'text',\n            readonly: true,\n        },\n        {\n            field: 'ModifiedOn',\n            label: 'Fecha de Última Modificación',\n            type: 'datetime',\n            readonly: true,\n        }\n    ];\n\n    let categoryData: any = null;\n    let projectsOptions: { value: string; text: string }[] = [];\n\n    // ========================================================================\n    // UTILIDADES - COMUNICACIÓN CON API\n    // ========================================================================\n\n    const fetchJson = async (url: string, options?: RequestInit): Promise<any> => {\n        const headers: Record<string, string> = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        };\n\n        if (token) {\n            headers['Authorization'] = `Bearer ${token}`;\n        }\n\n        const response = await fetch(url, { ...options, headers });\n\n        if (!response.ok) {\n            const errorData = await response.json().catch(() => ({}));\n            throw new Error(JSON.stringify(errorData));\n        }\n\n        return response.json();\n    };\n\n    // ========================================================================\n    // CARGA DE OPCIONES DINÁMICAS (PROYECTOS)\n    // ========================================================================\n\n    const loadProjects = async (): Promise<void> => {\n        try {\n            const url = `${apiBase}/Projects?pageNumber=1&pageSize=100`;\n            const response = await fetchJson(url);\n            \n            // Si viene paginado, extraer Data\n            const projects = response?.Data || response || [];\n\n            projectsOptions = projects\n                .filter((p: any) => p.ProjectStatus === true) // Solo proyectos activos\n                .map((p: any) => ({\n                    value: p.RecID.toString(),\n                    text: `${p.ProjectCode} - ${p.Name}`\n                }));\n\n            // Actualizar opciones del campo ProjectRefRecID\n            const projectField = businessFields.find(f => f.field === 'ProjectRefRecID');\n            if (projectField) {\n                projectField.options = projectsOptions;\n            }\n        } catch (error) {\n            (w as any).ALERTS.error('Error al cargar lista de proyectos', 'Error');\n        }\n    };\n\n    // ========================================================================\n    // RENDERIZADO DE CAMPOS\n    // ========================================================================\n\n    const renderField = (config: FieldConfig, value: any, is2Column: boolean = false): string => {\n        const fieldId = config.field;\n        const fieldName = config.field;\n\n        // Labels SIEMPRE a la izquierda\n        const labelClass = is2Column\n            ? 'control-label col-md-4 col-sm-4 col-xs-12'\n            : 'control-label col-md-3 col-sm-3 col-xs-12';\n\n        const inputContainerClass = is2Column\n            ? 'col-md-8 col-sm-8 col-xs-12'\n            : 'col-md-6 col-sm-6 col-xs-12';\n\n        const requiredMark = config.required ? '<span class=\"required\">*</span>' : '';\n        const readonlyAttr = config.readonly ? 'readonly' : '';\n        const requiredAttr = config.required ? 'required' : '';\n\n        let inputHtml = '';\n        let displayValue = value ?? '';\n\n        switch (config.type) {\n            case 'textarea':\n                inputHtml = `<textarea id=\"${fieldId}\" name=\"${fieldName}\" class=\"form-control\" rows=\"3\" maxlength=\"${config.maxLength || 500}\" ${readonlyAttr} ${requiredAttr}>${displayValue}</textarea>`;\n                break;\n\n            case 'select':\n                const options = config.options || [];\n                const optionsHtml = options.map(opt =>\n                    `<option value=\"${opt.value}\" ${displayValue.toString() === opt.value ? 'selected' : ''}>${opt.text}</option>`\n                ).join('');\n                inputHtml = `<select id=\"${fieldId}\" name=\"${fieldName}\" class=\"form-control\" ${readonlyAttr ? 'disabled' : ''} ${requiredAttr}>${optionsHtml}</select>`;\n                break;\n\n            case 'checkbox':\n                const checked = displayValue === true || displayValue === 'true' ? 'checked' : '';\n                inputHtml = `<input type=\"checkbox\" id=\"${fieldId}\" name=\"${fieldName}\" class=\"flat\" ${checked} ${readonlyAttr ? 'disabled' : ''}>`;\n                break;\n\n            case 'datetime':\n                if (displayValue && typeof displayValue === 'string' && /^\\d{4}-\\d{2}-\\d{2}T/.test(displayValue)) {\n                    displayValue = new Date(displayValue).toLocaleString('es-DO', {\n                        year: 'numeric',\n                        month: '2-digit',\n                        day: '2-digit',\n                        hour: '2-digit',\n                        minute: '2-digit',\n                        second: '2-digit'\n                    });\n                }\n                inputHtml = `<input type=\"text\" id=\"${fieldId}\" name=\"${fieldName}\" class=\"form-control\" value=\"${displayValue}\" ${readonlyAttr} ${requiredAttr}>`;\n                break;\n\n            case 'date':\n                if (displayValue && typeof displayValue === 'string' && /^\\d{4}-\\d{2}-\\d{2}T/.test(displayValue)) {\n                    displayValue = displayValue.split('T')[0];\n                }\n                inputHtml = `<input type=\"date\" id=\"${fieldId}\" name=\"${fieldName}\" class=\"form-control\" value=\"${displayValue}\" ${readonlyAttr} ${requiredAttr}>`;\n                break;\n\n            case 'number':\n                inputHtml = `<input type=\"number\" id=\"${fieldId}\" name=\"${fieldName}\" class=\"form-control\" value=\"${displayValue}\" ${readonlyAttr} ${requiredAttr}>`;\n                break;\n\n            default: // text\n                inputHtml = `<input type=\"text\" id=\"${fieldId}\" name=\"${fieldName}\" class=\"form-control\" maxlength=\"${config.maxLength || 255}\" value=\"${displayValue}\" placeholder=\"${config.placeholder || ''}\" ${readonlyAttr} ${requiredAttr}>`;\n                break;\n        }\n\n        const helpTextHtml = config.helpText ? `<span class=\"help-block\">${config.helpText}</span>` : '';\n\n        return `\n            <div class=\"form-group\">\n                <label class=\"${labelClass}\" for=\"${fieldId}\">\n                    ${config.label} ${requiredMark}\n                </label>\n                <div class=\"${inputContainerClass}\">\n                    ${inputHtml}\n                    ${helpTextHtml}\n                </div>\n            </div>\n        `;\n    };\n\n    // ========================================================================\n    // CARGA DE DATOS\n    // ========================================================================\n\n    const loadCategoryData = async (): Promise<void> => {\n        // Primero cargar proyectos\n        await loadProjects();\n\n        if (isNew) {\n            renderBusinessForm({});\n            renderAuditForm({});\n            return;\n        }\n\n        try {\n            const url = `${apiBase}/ProjectCategories/${recId}`;\n            categoryData = await fetchJson(url);\n\n            renderBusinessForm(categoryData);\n            renderAuditForm(categoryData);\n        } catch (error) {\n            (w as any).ALERTS.error('Error al cargar los datos de la categoría', 'Error');\n            renderBusinessForm({});\n            renderAuditForm({});\n        }\n    };\n\n    // ========================================================================\n    // RENDERIZADO DE FORMULARIOS\n    // ========================================================================\n\n    const renderBusinessForm = (data: any): void => {\n        const containerLeft = $('#dynamic-fields-col-left');\n        const containerRight = $('#dynamic-fields-col-right');\n\n        containerLeft.empty();\n        containerRight.empty();\n\n        businessFields\n            .filter(config => config.column === 'left')\n            .forEach(config => {\n                const value = data[config.field];\n                const fieldHtml = renderField(config, value, true);\n                containerLeft.append(fieldHtml);\n            });\n\n        businessFields\n            .filter(config => config.column === 'right')\n            .forEach(config => {\n                const value = data[config.field];\n                const fieldHtml = renderField(config, value, true);\n                containerRight.append(fieldHtml);\n            });\n\n        if ($.fn.iCheck) {\n            $('.flat').iCheck({\n                checkboxClass: 'icheckbox_flat-green'\n            });\n        }\n    };\n\n    const renderAuditForm = (data: any): void => {\n        const container = $('#audit-fields-container');\n        container.empty();\n\n        if (isNew) {\n            container.html(`\n                <div class=\"alert alert-warning\" role=\"alert\">\n                    <i class=\"fa fa-info-circle\"></i>\n                    <strong>Modo Creación:</strong> \n                    Los campos de auditoría se generarán automáticamente después de guardar la categoría.\n                </div>\n            `);\n            return;\n        }\n\n        auditFields.forEach(config => {\n            const value = data[config.field];\n            const fieldHtml = renderField(config, value, false);\n            container.append(fieldHtml);\n        });\n    };\n\n    // ========================================================================\n    // CAPTURA DE DATOS\n    // ========================================================================\n\n    const getFormData = (): any => {\n        const formData: any = {};\n\n        businessFields.forEach(config => {\n            const field = config.field;\n            const $input = $(`#${field}`);\n\n            if (config.readonly) {\n                return;\n            }\n\n            if ($input.length) {\n                if (config.type === 'checkbox') {\n                    formData[field] = $input.is(':checked');\n                } else if (config.type === 'select' && field === 'ProjectCategoryStatus') {\n                    const val = $input.val();\n                    formData[field] = val === 'true';\n                } else if (config.type === 'select' && field === 'ProjectRefRecID') {\n                    const val = $input.val();\n                    formData[field] = val ? parseInt(val) : null;\n                } else if (config.type === 'number') {\n                    const val = $input.val();\n                    formData[field] = val ? parseFloat(val) : null;\n                } else {\n                    const val = $input.val();\n                    formData[field] = val || null;\n                }\n            }\n        });\n\n        return formData;\n    };\n\n    // ========================================================================\n    // GUARDADO\n    // ========================================================================\n\n    const saveCategory = async (): Promise<void> => {\n        const formData = getFormData();\n\n        try {\n            const url = isNew ? `${apiBase}/ProjectCategories` : `${apiBase}/ProjectCategories/${recId}`;\n            const method = isNew ? 'POST' : 'PUT';\n\n            const payload = {\n                CategoryName: formData.CategoryName,\n                LedgerAccount: formData.LedgerAccount || null,\n                ProjectRefRecID: formData.ProjectRefRecID,\n                ProjectCategoryStatus: formData.ProjectCategoryStatus\n            };\n\n            console.log('FormData capturado:', formData);\n            console.log('Enviando payload:', payload);\n\n            await fetchJson(url, {\n                method: method,\n                body: JSON.stringify(payload)\n            });\n\n            (w as any).ALERTS.ok(\n                isNew ? 'Categoría creada exitosamente' : 'Categoría actualizada exitosamente',\n                'Éxito'\n            );\n\n            setTimeout(() => {\n                window.location.href = '/ProjectCategory/LP_ProjectCategories';\n            }, 1500);\n\n        } catch (error: any) {\n            console.error('Error al guardar:', error);\n            let errorMessage = 'Error al guardar la categoría';\n\n            try {\n                const errorData = JSON.parse(error.message);\n\n                if (errorData.errors) {\n                    const errorsArray: string[] = [];\n                    for (const key in errorData.errors) {\n                        if (errorData.errors.hasOwnProperty(key)) {\n                            const errList = errorData.errors[key];\n                            if (Array.isArray(errList)) {\n                                for (let i = 0; i < errList.length; i++) {\n                                    errorsArray.push(errList[i]);\n                                }\n                            } else {\n                                errorsArray.push(errList);\n                            }\n                        }\n                    }\n                    errorMessage = errorsArray.join(', ');\n                } else if (errorData.title) {\n                    errorMessage = errorData.title;\n                }\n            } catch {\n                errorMessage = error.message || errorMessage;\n            }\n\n            (w as any).ALERTS.error(errorMessage, 'Error');\n        }\n    };\n\n    // ========================================================================\n    // EVENT HANDLERS\n    // ========================================================================\n\n    $('#btn-save').on('click', async () => {\n        const form = document.getElementById('frm-project-category') as HTMLFormElement;\n\n        if (!form.checkValidity()) {\n            form.reportValidity();\n            return;\n        }\n\n        await saveCategory();\n    });\n\n    // ========================================================================\n    // INICIALIZACIÓN\n    // ========================================================================\n\n    $(async function () {\n        try {\n            await loadCategoryData();\n        } catch (error) {\n            (w as any).ALERTS.error('Error al inicializar el formulario', 'Error');\n        }\n    });\n})();\n"]}