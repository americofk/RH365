{"version":3,"file":"login.js","sourceRoot":"","sources":["../../TS/login.ts"],"names":[],"mappings":"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","sourcesContent":["// ============================================================================\r\n// Archivo: login.ts\r\n// Proyecto: RH365.WebMVC\r\n// Ruta: RH365/TS/login.ts\r\n// DescripciÃ³n:\r\n//   - Script TypeScript para manejo del formulario de login\r\n//   - Validaciones client-side y llamadas AJAX al controller\r\n// ============================================================================\r\n\r\ninterface ILoginForm {\r\n    email: HTMLInputElement;\r\n    password: HTMLInputElement;\r\n    submitButton: HTMLButtonElement;\r\n    form: HTMLFormElement;\r\n}\r\n\r\nclass LoginManager {\r\n    private elements!: ILoginForm;\r\n    private isSubmitting: boolean = false;\r\n\r\n    constructor() {\r\n        this.initializeElements();\r\n        if (this.elements) {\r\n            this.attachEventListeners();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Inicializar elementos del DOM\r\n     */\r\n    private initializeElements(): void {\r\n        const email = document.getElementById('email') as HTMLInputElement;\r\n        const password = document.getElementById('password') as HTMLInputElement;\r\n        const submitButton = document.querySelector('button[type=\"submit\"]') as HTMLButtonElement;\r\n        const form = document.querySelector('form') as HTMLFormElement;\r\n\r\n        // Verificar que todos los elementos existen\r\n        if (!email || !password || !submitButton || !form) {\r\n            console.error('No se encontraron todos los elementos del formulario');\r\n            return;\r\n        }\r\n\r\n        this.elements = {\r\n            email: email,\r\n            password: password,\r\n            submitButton: submitButton,\r\n            form: form\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Adjuntar event listeners\r\n     */\r\n    private attachEventListeners(): void {\r\n        // Submit del formulario\r\n        this.elements.form.addEventListener('submit', (e) => this.handleSubmit(e));\r\n\r\n        // Enter en campos\r\n        this.elements.email.addEventListener('keypress', (e) => this.handleEnterKey(e));\r\n        this.elements.password.addEventListener('keypress', (e) => this.handleEnterKey(e));\r\n\r\n        // ValidaciÃ³n en tiempo real\r\n        this.elements.email.addEventListener('blur', () => this.validateEmail());\r\n        this.elements.password.addEventListener('blur', () => this.validatePassword());\r\n    }\r\n\r\n    /**\r\n     * Manejar submit del formulario\r\n     */\r\n    private async handleSubmit(e: Event): Promise<void> {\r\n        e.preventDefault();\r\n\r\n        if (this.isSubmitting) return;\r\n\r\n        // Validar campos\r\n        if (!this.validateForm()) {\r\n            return;\r\n        }\r\n\r\n        this.isSubmitting = true;\r\n        this.setLoadingState(true);\r\n\r\n        try {\r\n            // Crear FormData con los nombres correctos\r\n            const formData = new URLSearchParams();\r\n            formData.append('EmailOrAlias', this.elements.email.value);\r\n            formData.append('Password', this.elements.password.value);\r\n\r\n            // Obtener token antiforgery\r\n            const tokenInput = document.querySelector('input[name=\"__RequestVerificationToken\"]') as HTMLInputElement;\r\n            if (tokenInput && tokenInput.value) {\r\n                formData.append('__RequestVerificationToken', tokenInput.value);\r\n            }\r\n\r\n            const response = await fetch('/Login/Login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n                body: formData.toString(),\r\n                credentials: 'same-origin'\r\n            });\r\n\r\n            if (response.ok) {\r\n                // Si la respuesta es redirect (login exitoso)\r\n                if (response.redirected) {\r\n                    // Mostrar mensaje de Ã©xito\r\n                    this.showSuccess('AutenticaciÃ³n exitosa. Cargando sistema...');\r\n\r\n                    // Fade out del formulario\r\n                    this.elements.form.style.transition = 'opacity 0.5s ease';\r\n                    this.elements.form.style.opacity = '0.5';\r\n\r\n                    // Esperar un momento antes de redirigir\r\n                    setTimeout(() => {\r\n                        // Fade out completo\r\n                        document.body.style.transition = 'opacity 0.3s ease';\r\n                        document.body.style.opacity = '0';\r\n\r\n                        setTimeout(() => {\r\n                            window.location.href = response.url;\r\n                        }, 300);\r\n                    }, 800);\r\n                } else {\r\n                    // Si es JSON, procesarlo\r\n                    const contentType = response.headers.get('content-type');\r\n                    if (contentType && contentType.includes('application/json')) {\r\n                        const data = await response.json();\r\n                        if (data.success) {\r\n                            this.showSuccess('AutenticaciÃ³n exitosa. Cargando...');\r\n                            setTimeout(() => {\r\n                                window.location.href = data.redirectUrl || '/Home';\r\n                            }, 1000);\r\n                        } else {\r\n                            this.showError(data.message || 'Credenciales invÃ¡lidas');\r\n                        }\r\n                    } else {\r\n                        // Si es HTML, recargar la pÃ¡gina para mostrar errores del servidor\r\n                        window.location.reload();\r\n                    }\r\n                }\r\n            } else {\r\n                this.showError('Error al iniciar sesiÃ³n. Por favor intente nuevamente.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            this.showError('Error de conexiÃ³n. Por favor verifique su conexiÃ³n a internet.');\r\n        } finally {\r\n            this.isSubmitting = false;\r\n            this.setLoadingState(false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Manejar tecla Enter\r\n     */\r\n    private handleEnterKey(e: KeyboardEvent): void {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            this.elements.form.dispatchEvent(new Event('submit'));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Validar formulario completo\r\n     */\r\n    private validateForm(): boolean {\r\n        const emailValid = this.validateEmail();\r\n        const passwordValid = this.validatePassword();\r\n        return emailValid && passwordValid;\r\n    }\r\n\r\n    /**\r\n     * Validar email\r\n     */\r\n    private validateEmail(): boolean {\r\n        const email = this.elements.email.value.trim();\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n        if (!email) {\r\n            this.showFieldError(this.elements.email, 'El correo electrÃ³nico es requerido');\r\n            return false;\r\n        }\r\n\r\n        if (!emailRegex.test(email)) {\r\n            this.showFieldError(this.elements.email, 'Ingrese un correo electrÃ³nico vÃ¡lido');\r\n            return false;\r\n        }\r\n\r\n        this.clearFieldError(this.elements.email);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Validar contraseÃ±a\r\n     */\r\n    private validatePassword(): boolean {\r\n        const password = this.elements.password.value;\r\n\r\n        if (!password) {\r\n            this.showFieldError(this.elements.password, 'La contraseÃ±a es requerida');\r\n            return false;\r\n        }\r\n\r\n        if (password.length < 6) {\r\n            this.showFieldError(this.elements.password, 'La contraseÃ±a debe tener al menos 6 caracteres');\r\n            return false;\r\n        }\r\n\r\n        this.clearFieldError(this.elements.password);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Mostrar error en campo\r\n     */\r\n    private showFieldError(input: HTMLInputElement, message: string): void {\r\n        input.classList.add('is-invalid');\r\n\r\n        // Buscar o crear elemento de error\r\n        let errorElement = input.parentElement?.querySelector('.invalid-feedback') as HTMLElement;\r\n        if (!errorElement) {\r\n            errorElement = document.createElement('div');\r\n            errorElement.className = 'invalid-feedback';\r\n            input.parentElement?.appendChild(errorElement);\r\n        }\r\n        errorElement.textContent = message;\r\n    }\r\n\r\n    /**\r\n     * Limpiar error de campo\r\n     */\r\n    private clearFieldError(input: HTMLInputElement): void {\r\n        input.classList.remove('is-invalid');\r\n        const errorElement = input.parentElement?.querySelector('.invalid-feedback');\r\n        if (errorElement) {\r\n            errorElement.remove();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Mostrar mensaje de error general\r\n     */\r\n    private showError(message: string): void {\r\n        // Buscar o crear alert\r\n        let alertElement = document.querySelector('.alert-danger') as HTMLElement;\r\n        if (!alertElement) {\r\n            alertElement = document.createElement('div');\r\n            alertElement.className = 'alert alert-danger alert-dismissible fade show';\r\n            alertElement.innerHTML = `\r\n                <span class=\"error-message\">${message}</span>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"alert\">\r\n                    <span>&times;</span>\r\n                </button>\r\n            `;\r\n            this.elements.form.parentElement?.insertBefore(alertElement, this.elements.form);\r\n        } else {\r\n            const messageElement = alertElement.querySelector('.error-message');\r\n            if (messageElement) {\r\n                messageElement.textContent = message;\r\n            }\r\n        }\r\n\r\n        // Auto-ocultar despuÃ©s de 5 segundos\r\n        setTimeout(() => {\r\n            alertElement.remove();\r\n        }, 5000);\r\n    }\r\n\r\n    /**\r\n     * Mostrar mensaje de Ã©xito\r\n     */\r\n    private showSuccess(message: string): void {\r\n        // Remover errores previos\r\n        const existingError = document.querySelector('.alert-danger');\r\n        if (existingError) existingError.remove();\r\n\r\n        // Crear alert de Ã©xito\r\n        const alertElement = document.createElement('div');\r\n        alertElement.className = 'alert alert-success fade-in';\r\n        alertElement.style.cssText = 'animation: fadeIn 0.5s ease; margin-bottom: 20px;';\r\n        alertElement.innerHTML = `\r\n            <i class=\"fa fa-check-circle\"></i> ${message}\r\n            <div class=\"spinner-border spinner-border-sm float-right\" role=\"status\" style=\"float: right;\">\r\n                <span class=\"sr-only\">Cargando...</span>\r\n            </div>\r\n        `;\r\n        this.elements.form.parentElement?.insertBefore(alertElement, this.elements.form);\r\n    }\r\n\r\n    /**\r\n     * Establecer estado de carga\r\n     */\r\n    private setLoadingState(loading: boolean): void {\r\n        if (loading) {\r\n            this.elements.submitButton.disabled = true;\r\n            this.elements.submitButton.innerHTML = '<span class=\"spinner-border spinner-border-sm mr-2\"></span>Ingresando...';\r\n            this.elements.email.disabled = true;\r\n            this.elements.password.disabled = true;\r\n        } else {\r\n            this.elements.submitButton.disabled = false;\r\n            this.elements.submitButton.innerHTML = 'Ingresar';\r\n            this.elements.email.disabled = false;\r\n            this.elements.password.disabled = false;\r\n        }\r\n    }\r\n}\r\n\r\n// Inicializar cuando el DOM estÃ© listo\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    new LoginManager();\r\n});"]}