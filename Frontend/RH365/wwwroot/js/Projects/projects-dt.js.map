{"version":3,"file":"projects-dt.js","sourceRoot":"","sources":["../../../TS/Projects/projects-dt.ts"],"names":[],"mappings":"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","sourcesContent":["// ============================================================================\r\n// Archivo: projects-dt.ts\r\n// Proyecto: RH365.WebMVC\r\n// Ruta: TS/Projects/projects-dt.ts\r\n// Descripción:\r\n//   - Lista de Proyectos con DataTables\r\n//   - Gestión de vistas de usuario (UserGridViews)\r\n//   - Genera columnas y filas dinámicamente desde API\r\n// ============================================================================\r\n\r\ntype ProjectRow = Record<string, unknown>;\r\n\r\ninterface ProjectResponse {\r\n    Data: ProjectRow[];\r\n    TotalCount: number;\r\n    PageNumber: number;\r\n    PageSize: number;\r\n    TotalPages: number;\r\n    HasNextPage: boolean;\r\n    HasPreviousPage: boolean;\r\n}\r\n\r\ninterface ColumnConfig {\r\n    field: string;\r\n    visible: boolean;\r\n    order: number;\r\n    width?: number;\r\n}\r\n\r\n(function () {\r\n    const w: any = window;\r\n    const d: Document = document;\r\n    const $: any = w.jQuery || w.$;\r\n\r\n    const apiBase: string = (w.RH365?.urls?.apiBase) || \"http://localhost:9595/api\";\r\n    const pageContainer = d.querySelector(\"#projects-page\");\r\n\r\n    if (!pageContainer) return;\r\n\r\n    const token: string = pageContainer.getAttribute(\"data-token\") || \"\";\r\n    const dataareaId: string = pageContainer.getAttribute(\"data-dataarea\") || \"DAT\";\r\n    const userRefRecID: number = parseInt(pageContainer.getAttribute(\"data-user\") || \"0\", 10);\r\n\r\n    const $table: any = $(\"#projects-table\");\r\n    if (!$table.length) return;\r\n\r\n    let projectsData: ProjectRow[] = [];\r\n    let allColumns: string[] = [];\r\n    let visibleColumns: string[] = [];\r\n    const defaultColumns: string[] = ['ID', 'ProjectCode', 'Name', 'LedgerAccount', 'ProjectStatus', 'CreatedOn'];\r\n\r\n    let gridViewsManager: any;\r\n    let gridColumnsManager: any;\r\n\r\n    const titleize = (field: string): string => {\r\n        const translations: Record<string, string> = {\r\n            'RecID': 'ID Registro',\r\n            'ID': 'ID',\r\n            'ProjectCode': 'Código Proyecto',\r\n            'Name': 'Nombre',\r\n            'LedgerAccount': 'Cuenta Contable',\r\n            'ProjectStatus': 'Estado',\r\n            'CreatedOn': 'Fecha Creación',\r\n            'CreatedBy': 'Creado Por',\r\n            'ModifiedOn': 'Modificado',\r\n            'ModifiedBy': 'Modificado Por',\r\n            'Observations': 'Observaciones'\r\n        };\r\n        return translations[field] || field.replace(/([a-z])([A-Z])/g, \"$1 $2\").replace(/_/g, \" \").replace(/^./, (c) => c.toUpperCase());\r\n    };\r\n\r\n    const formatCell = (value: unknown, field: string): string => {\r\n        if (value == null) return \"\";\r\n        if (typeof value === \"boolean\") {\r\n            if (field === \"ProjectStatus\") {\r\n                return value ? '<span class=\"label label-success\">Activo</span>' : '<span class=\"label label-danger\">Inactivo</span>';\r\n            }\r\n            return value ? \"Sí\" : \"No\";\r\n        }\r\n        if (typeof value === \"string\" && /^\\d{4}-\\d{2}-\\d{2}T/.test(value)) {\r\n            const dt = new Date(value);\r\n            if (!isNaN(dt.getTime())) {\r\n                return dt.toLocaleDateString('es-DO', { day: '2-digit', month: '2-digit', year: 'numeric' });\r\n            }\r\n        }\r\n        return String(value);\r\n    };\r\n\r\n    const fetchJson = async (url: string): Promise<any> => {\r\n        const headers: Record<string, string> = {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        };\r\n        if (token) {\r\n            headers['Authorization'] = `Bearer ${token}`;\r\n        }\r\n        const response = await fetch(url, { headers });\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP ${response.status} @ ${url}`);\r\n        }\r\n        return response.json();\r\n    };\r\n\r\n    const getColumnsFromData = (sample: ProjectRow): string[] => {\r\n        if (!sample || typeof sample !== 'object') {\r\n            return [...defaultColumns];\r\n        }\r\n        const excluded = new Set(['RecID', 'RowVersion', 'DataareaID']);\r\n        return Object.keys(sample).filter(col => !excluded.has(col));\r\n    };\r\n\r\n    const initializeDataTable = (columns: string[]): void => {\r\n        if ($.fn.DataTable.isDataTable($table)) {\r\n            $table.DataTable().destroy();\r\n        }\r\n        const theadHtml = `\r\n            <tr>\r\n                <th style=\"width:40px;\"><input type=\"checkbox\" id=\"check-all\" class=\"flat\"/></th>\r\n                ${columns.map(col => `<th data-field=\"${col}\">${titleize(col)}</th>`).join('')}\r\n            </tr>\r\n        `;\r\n        $table.find('thead').html(theadHtml);\r\n        if ($.fn.iCheck) {\r\n            $('.flat').iCheck({ checkboxClass: 'icheckbox_flat-green' });\r\n        }\r\n        const dtConfig: any = {\r\n            processing: true,\r\n            serverSide: false,\r\n            responsive: true,\r\n            autoWidth: false,\r\n            order: [[1, 'asc']],\r\n            pageLength: 25,\r\n            lengthMenu: [[10, 25, 50, 100], [10, 25, 50, 100]],\r\n            language: {\r\n                lengthMenu: 'Mostrar _MENU_ registros',\r\n                zeroRecords: 'No se encontraron resultados',\r\n                info: 'Mostrando _START_ a _END_ de _TOTAL_ registros',\r\n                infoEmpty: 'No hay registros',\r\n                infoFiltered: '(filtrado de _MAX_ registros)',\r\n                search: 'Buscar:',\r\n                paginate: { first: 'Primera', last: 'Última', next: 'Siguiente', previous: 'Anterior' },\r\n                processing: 'Procesando...'\r\n            },\r\n            columns: [\r\n                {\r\n                    data: null,\r\n                    orderable: false,\r\n                    searchable: false,\r\n                    className: 'text-center',\r\n                    render: (_data: any, _type: string, row: ProjectRow) => {\r\n                        return `<input type=\"checkbox\" class=\"flat row-check\" data-recid=\"${row.RecID || ''}\"/>`;\r\n                    }\r\n                },\r\n                ...columns.map(col => ({ data: col, name: col, render: (data: unknown) => formatCell(data, col) }))\r\n            ],\r\n            ajax: (_data: any, callback: (result: { data: ProjectRow[] }) => void) => {\r\n                loadProjects().then(items => {\r\n                    projectsData = items;\r\n                    callback({ data: items });\r\n                    updateSummary(items.length);\r\n                }).catch(err => {\r\n                    console.error('Error cargando proyectos:', err);\r\n                    showError(err.message);\r\n                    callback({ data: [] });\r\n                });\r\n            },\r\n            drawCallback: function () {\r\n                if ($.fn.iCheck) {\r\n                    $table.find('.flat').iCheck({ checkboxClass: 'icheckbox_flat-green' });\r\n                }\r\n            }\r\n        };\r\n        $table.DataTable(dtConfig);\r\n        console.log('✓ DataTable inicializado con columnas:', columns);\r\n    };\r\n\r\n    const loadProjects = async (): Promise<ProjectRow[]> => {\r\n        const url = `${apiBase}/Projects?pageNumber=1&pageSize=100`;\r\n        console.log('Cargando proyectos desde:', url);\r\n        const response: ProjectResponse = await fetchJson(url);\r\n        if (response?.Data && Array.isArray(response.Data)) {\r\n            console.log(`✓ ${response.Data.length} proyectos cargados`);\r\n            return response.Data;\r\n        }\r\n        throw new Error('Respuesta del API inválida');\r\n    };\r\n\r\n    const updateSummary = (count: number): void => {\r\n        const summary = d.getElementById('projects-summary');\r\n        if (summary) {\r\n            summary.textContent = `${count} proyecto${count !== 1 ? 's' : ''}`;\r\n        }\r\n    };\r\n\r\n    const showError = (message: string): void => {\r\n        const errorHtml = `\r\n            <tr>\r\n                <td colspan=\"10\" class=\"text-center text-danger\">\r\n                    <i class=\"fa fa-exclamation-triangle\"></i> ${message}\r\n                </td>\r\n            </tr>\r\n        `;\r\n        $table.find('tbody').html(errorHtml);\r\n    };\r\n\r\n    const updateButtonStates = (): void => {\r\n        const checkedCount = $table.find('tbody input.row-check:checked').length;\r\n        $('#btn-edit').prop('disabled', checkedCount !== 1);\r\n        $('#btn-delete').prop('disabled', checkedCount === 0);\r\n    };\r\n\r\n    const exportToCSV = (): void => {\r\n        if (!projectsData.length) {\r\n            alert('No hay datos para exportar');\r\n            return;\r\n        }\r\n        const dt: any = $table.DataTable();\r\n        const rows: ProjectRow[] = dt.rows({ search: 'applied' }).data().toArray();\r\n        if (!rows.length) {\r\n            alert('No hay datos visibles para exportar');\r\n            return;\r\n        }\r\n        const columns = visibleColumns;\r\n        const csvLines: string[] = [columns.map(col => titleize(col)).join(',')];\r\n        rows.forEach(row => {\r\n            const line = columns.map(col => {\r\n                const value = (row as any)[col];\r\n                const str = value == null ? '' : String(value).replace(/\"/g, '\"\"');\r\n                return /[\",\\n]/.test(str) ? `\"${str}\"` : str;\r\n            }).join(',');\r\n            csvLines.push(line);\r\n        });\r\n        const blob = new Blob([csvLines.join('\\n')], { type: 'text/csv;charset=utf-8;' });\r\n        const url = URL.createObjectURL(blob);\r\n        const link = d.createElement('a');\r\n        const fileName = `Proyectos_${new Date().toISOString().slice(0, 10)}.csv`;\r\n        link.href = url;\r\n        link.download = fileName;\r\n        link.style.visibility = 'hidden';\r\n        d.body.appendChild(link);\r\n        link.click();\r\n        d.body.removeChild(link);\r\n        URL.revokeObjectURL(url);\r\n    };\r\n\r\n    const deleteProject = async (recId: string): Promise<void> => {\r\n        const url = `${apiBase}/Projects/${recId}`;\r\n        const headers: Record<string, string> = { 'Authorization': `Bearer ${token}` };\r\n        const response = await fetch(url, { method: 'DELETE', headers });\r\n        if (!response.ok) {\r\n            throw new Error(`Error al eliminar proyecto: ${response.status}`);\r\n        }\r\n    };\r\n\r\n    const applyColumnChanges = (newColumns: string[]): void => {\r\n        visibleColumns = newColumns;\r\n        initializeDataTable(newColumns);\r\n        if (gridViewsManager && gridViewsManager.hasCurrentView()) {\r\n            $('#btn-save-view-changes').show();\r\n        }\r\n    };\r\n\r\n    const updateViewsDropdown = (): void => {\r\n        const views = gridViewsManager.getAvailableViews();\r\n        const container = $('#saved-views-container');\r\n        container.empty();\r\n\r\n        if (views.length === 0) {\r\n            container.append('<li class=\"text-muted\" style=\"padding: 5px 20px;\">No hay vistas guardadas</li>');\r\n            return;\r\n        }\r\n\r\n        views.forEach((view: any) => {\r\n            const icon = view.IsDefault ? '<i class=\"fa fa-star text-warning\"></i>' : '<i class=\"fa fa-file-o\"></i>';\r\n            const item = $(`\r\n            <li style=\"position: relative;\">\r\n                <a href=\"#\" data-view-id=\"${view.RecID}\" style=\"display: inline-block; width: 80%;\">\r\n                    ${icon} ${view.ViewName}\r\n                    ${view.IsPublic ? '<span class=\"label label-info label-sm\">Pública</span>' : ''}\r\n                </a>\r\n                ${!view.IsDefault ? `\r\n                    <a href=\"#\" class=\"btn-set-default\" data-view-id=\"${view.RecID}\" \r\n                       style=\"position: absolute; right: 10px; top: 5px; color: #999;\" \r\n                       title=\"Establecer como predeterminada\">\r\n                        <i class=\"fa fa-star-o\"></i>\r\n                    </a>\r\n                ` : ''}\r\n            </li>\r\n        `);\r\n\r\n            item.find('a[data-view-id]').first().on('click', async function (e) {\r\n                e.preventDefault();\r\n                await loadViewById(view.RecID);\r\n            });\r\n\r\n            item.find('.btn-set-default').on('click', async function (e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n\r\n                if (confirm(`¿Establecer \"${view.ViewName}\" como vista predeterminada?`)) {\r\n                    const success = await gridViewsManager.setDefaultView(view.RecID);\r\n                    if (success) {\r\n                        updateViewsDropdown();\r\n                        alert(`Vista \"${view.ViewName}\" establecida como predeterminada`);\r\n                    }\r\n                }\r\n            });\r\n\r\n            container.append(item);\r\n        });\r\n    };\r\n\r\n    const loadViewById = async (viewId: number): Promise<void> => {\r\n        try {\r\n            const columnConfigs: ColumnConfig[] = await gridViewsManager.loadView(viewId);\r\n            if (columnConfigs.length > 0) {\r\n                gridColumnsManager.applyColumnConfig(columnConfigs);\r\n                const newColumns = columnConfigs.filter(c => c.visible).sort((a, b) => a.order - b.order).map(c => c.field);\r\n                applyColumnChanges(newColumns);\r\n                const viewName = gridViewsManager.getCurrentViewName();\r\n                $('#current-view-name').text(viewName);\r\n                $('#btn-save-view-changes').hide();\r\n                console.log(`✓ Vista \"${viewName}\" cargada`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error cargando vista:', error);\r\n            alert('Error al cargar la vista');\r\n        }\r\n    };\r\n\r\n    $(document).on('ifChanged', '#check-all', function (this: HTMLInputElement) {\r\n        const isChecked = $(this).is(':checked');\r\n        $table.find('tbody input.row-check').iCheck(isChecked ? 'check' : 'uncheck');\r\n    });\r\n\r\n    $(document).on('ifChanged', '.row-check', function () {\r\n        const total = $table.find('tbody input.row-check').length;\r\n        const checked = $table.find('tbody input.row-check:checked').length;\r\n        if (checked === total && total > 0) {\r\n            $('#check-all').iCheck('check');\r\n        } else {\r\n            $('#check-all').iCheck('uncheck');\r\n        }\r\n        updateButtonStates();\r\n    });\r\n\r\n    $('#btn-new').on('click', () => { window.location.href = '/Project/NewEdit'; });\r\n\r\n    $('#btn-edit').on('click', () => {\r\n        const $checked = $table.find('tbody input.row-check:checked').first();\r\n        if ($checked.length) {\r\n            const recId = $checked.data('recid');\r\n            window.location.href = `/Project/NewEdit?recId=${recId}`;\r\n        }\r\n    });\r\n\r\n    $('#btn-delete').on('click', async () => {\r\n        const $checked = $table.find('tbody input.row-check:checked');\r\n        const count = $checked.length;\r\n        if (count === 0) return;\r\n        const message = count === 1 ? '¿Está seguro de eliminar este proyecto?' : `¿Está seguro de eliminar ${count} proyectos?`;\r\n        if (!confirm(message)) return;\r\n        try {\r\n            const promises: Promise<void>[] = [];\r\n            $checked.each(function () {\r\n                const recId = $(this).data('recid');\r\n                if (recId) {\r\n                    promises.push(deleteProject(recId));\r\n                }\r\n            });\r\n            await Promise.all(promises);\r\n            alert('Proyecto(s) eliminado(s) correctamente');\r\n            $table.DataTable().ajax.reload();\r\n        } catch (error) {\r\n            console.error('Error al eliminar:', error);\r\n            alert('Error al eliminar proyecto(s)');\r\n        }\r\n    });\r\n\r\n    $('#btn-export').on('click', exportToCSV);\r\n    $('#btn-import').on('click', () => { alert('Funcionalidad de importación próximamente'); });\r\n\r\n    $table.on('click', 'tbody tr', function (e: any) {\r\n        if ($(e.target).is('input.row-check') || $(e.target).closest('.icheckbox_flat-green').length) {\r\n            return;\r\n        }\r\n        const $row = $(this);\r\n        const $checkbox = $row.find('input.row-check');\r\n        if ($checkbox.length) {\r\n            const isChecked = $checkbox.is(':checked');\r\n            $checkbox.iCheck(isChecked ? 'uncheck' : 'check');\r\n        }\r\n    });\r\n\r\n    $('#btn-manage-columns').on('click', () => { gridColumnsManager.showColumnsModal(); });\r\n\r\n    $('#btn-apply-columns').on('click', () => {\r\n        const columnConfigs = gridColumnsManager.applyColumns();\r\n        const newColumns = columnConfigs.filter(c => c.visible).sort((a, b) => a.order - b.order).map(c => c.field);\r\n        applyColumnChanges(newColumns);\r\n        ($ as any)('#modal-manage-columns').modal('hide');\r\n    });\r\n\r\n    $('#btn-new-view').on('click', (e) => {\r\n        e.preventDefault();\r\n        $('#view-name').val('');\r\n        $('#view-is-default').prop('checked', false);\r\n        $('#view-is-public').prop('checked', false);\r\n        ($ as any)('#modal-save-view').modal('show');\r\n    });\r\n\r\n    $('#btn-confirm-save-view').on('click', async () => {\r\n        const viewName = ($('#view-name').val() as string).trim();\r\n        const isDefault = $('#view-is-default').is(':checked');\r\n        const isPublic = $('#view-is-public').is(':checked');\r\n        if (!viewName) {\r\n            alert('Por favor ingrese un nombre para la vista');\r\n            return;\r\n        }\r\n        const columnConfigs = gridColumnsManager.getCurrentColumnConfig();\r\n        const success = await gridViewsManager.saveView(viewName, columnConfigs, isDefault, isPublic);\r\n        if (success) {\r\n            ($ as any)('#modal-save-view').modal('hide');\r\n            $('#current-view-name').text(viewName);\r\n            $('#btn-save-view-changes').hide();\r\n            updateViewsDropdown();\r\n            alert(`Vista \"${viewName}\" guardada exitosamente`);\r\n        }\r\n    });\r\n\r\n    $('#btn-save-as-view').on('click', () => {\r\n        $('#view-name-saveas').val('');\r\n        $('#view-is-default-saveas').prop('checked', false);\r\n        $('#view-is-public-saveas').prop('checked', false);\r\n        ($ as any)('#modal-save-as-view').modal('show');\r\n    });\r\n\r\n    $('#btn-confirm-save-as').on('click', async () => {\r\n        const viewName = ($('#view-name-saveas').val() as string).trim();\r\n        const isDefault = $('#view-is-default-saveas').is(':checked');\r\n        const isPublic = $('#view-is-public-saveas').is(':checked');\r\n        if (!viewName) {\r\n            alert('Por favor ingrese un nombre para la vista');\r\n            return;\r\n        }\r\n        const columnConfigs = gridColumnsManager.getCurrentColumnConfig();\r\n        const success = await gridViewsManager.saveView(viewName, columnConfigs, isDefault, isPublic);\r\n        if (success) {\r\n            ($ as any)('#modal-save-as-view').modal('hide');\r\n            $('#current-view-name').text(viewName);\r\n            $('#btn-save-view-changes').hide();\r\n            updateViewsDropdown();\r\n            alert(`Vista \"${viewName}\" guardada exitosamente`);\r\n        }\r\n    });\r\n\r\n    $('#btn-save-view-changes').on('click', async () => {\r\n        if (!gridViewsManager.hasCurrentView()) {\r\n            alert('No hay vista activa para actualizar');\r\n            return;\r\n        }\r\n        const columnConfigs = gridColumnsManager.getCurrentColumnConfig();\r\n        const success = await gridViewsManager.updateView(columnConfigs);\r\n        if (success) {\r\n            $('#btn-save-view-changes').hide();\r\n            alert('Vista actualizada exitosamente');\r\n        }\r\n    });\r\n\r\n    $('#btn-reset-view').on('click', () => {\r\n        if (confirm('¿Desea restablecer a la vista por defecto?')) {\r\n            gridColumnsManager.resetToDefault(defaultColumns);\r\n            applyColumnChanges(defaultColumns);\r\n            $('#current-view-name').text('Vista por defecto');\r\n            $('#btn-save-view-changes').hide();\r\n        }\r\n    });\r\n\r\n    $(document).on('click', '[data-view=\"default\"]', (e) => {\r\n        e.preventDefault();\r\n        gridColumnsManager.resetToDefault(defaultColumns);\r\n        applyColumnChanges(defaultColumns);\r\n        $('#current-view-name').text('Vista por defecto');\r\n        $('#btn-save-view-changes').hide();\r\n    });\r\n\r\n    $(async function () {\r\n        try {\r\n            console.log('Inicializando lista de proyectos...');\r\n            console.log('Token:', token ? '✓' : '✗');\r\n            console.log('UserRefRecID:', userRefRecID);\r\n            const probeUrl = `${apiBase}/Projects?pageNumber=1&pageSize=1`;\r\n            const probe: ProjectResponse = await fetchJson(probeUrl);\r\n            if (probe?.Data?.length) {\r\n                allColumns = getColumnsFromData(probe.Data[0]);\r\n            } else {\r\n                allColumns = [...defaultColumns];\r\n            }\r\n            console.log('Columnas detectadas:', allColumns);\r\n            const GridViewsManagerClass = (w as any).GridViewsManager;\r\n            const GridColumnsManagerClass = (w as any).GridColumnsManager;\r\n            if (!GridViewsManagerClass || !GridColumnsManagerClass) {\r\n                console.error('GridViewsManager o GridColumnsManager no están disponibles');\r\n                visibleColumns = [...defaultColumns];\r\n                initializeDataTable(visibleColumns);\r\n                return;\r\n            }\r\n            gridViewsManager = new GridViewsManagerClass(apiBase, token, \"Projects\", userRefRecID, dataareaId);\r\n            const savedColumns: ColumnConfig[] = await gridViewsManager.initialize();\r\n            if (savedColumns.length > 0) {\r\n                visibleColumns = savedColumns.filter(c => c.visible).sort((a, b) => a.order - b.order).map(c => c.field);\r\n                const viewName = gridViewsManager.getCurrentViewName();\r\n                $('#current-view-name').text(viewName);\r\n                console.log(`✓ Vista \"${viewName}\" cargada desde BD`);\r\n            } else {\r\n                visibleColumns = [...defaultColumns];\r\n                console.log('✓ Usando vista por defecto');\r\n            }\r\n            gridColumnsManager = new GridColumnsManagerClass(allColumns, visibleColumns, (newColumns: string[]) => {\r\n                applyColumnChanges(newColumns);\r\n            });\r\n            updateViewsDropdown();\r\n            initializeDataTable(visibleColumns);\r\n        } catch (error) {\r\n            console.error('Error en inicialización:', error);\r\n            visibleColumns = [...defaultColumns];\r\n            initializeDataTable(visibleColumns);\r\n            showError('Error al cargar la configuración');\r\n        }\r\n    });\r\n})();"]}