{"version":3,"file":"projects-dt.js","sourceRoot":"","sources":["../../../TS/Projects/projects-dt.ts"],"names":[],"mappings":"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","sourcesContent":["// ============================================================================\r\n// Archivo: projects-list.ts\r\n// Proyecto: RH365.WebMVC\r\n// Ruta: TS/Projects/projects-list.ts\r\n// Descripción:\r\n//   - Lista de Proyectos con DataTables\r\n//   - Genera columnas y filas dinámicamente desde API\r\n//   - Compatible con compilación TypeScript\r\n// ============================================================================\r\n\r\ntype ProjectRow = Record<string, unknown>;\r\n\r\ninterface ProjectResponse {\r\n    Data: ProjectRow[];\r\n    TotalCount: number;\r\n    PageNumber: number;\r\n    PageSize: number;\r\n    TotalPages: number;\r\n    HasNextPage: boolean;\r\n    HasPreviousPage: boolean;\r\n}\r\n\r\n(function () {\r\n    const w: any = window;\r\n    const d: Document = document;\r\n    const $: any = w.jQuery || w.$;\r\n\r\n    // Configuración\r\n    const apiBase: string = (w.RH365?.urls?.apiBase) || \"http://localhost:9595/api\";\r\n    const pageContainer = d.querySelector(\"#projects-page\");\r\n\r\n    if (!pageContainer) return;\r\n\r\n    const token: string = pageContainer.getAttribute(\"data-token\") || \"\";\r\n    const dataareaId: string = pageContainer.getAttribute(\"data-dataarea\") || \"DAT\";\r\n    const userRefRecID: string = pageContainer.getAttribute(\"data-user\") || \"0\";\r\n\r\n    const $table: any = $(\"#projects-table\");\r\n    if (!$table.length) return;\r\n\r\n    let projectsData: ProjectRow[] = [];\r\n\r\n    // ========================================================================\r\n    // UTILIDADES\r\n    // ========================================================================\r\n\r\n    /**\r\n     * Convertir campo a título legible\r\n     */\r\n    const titleize = (field: string): string => {\r\n        const translations: Record<string, string> = {\r\n            'ID': 'ID Sistema',\r\n            'ProjectCode': 'Código Proyecto',\r\n            'Name': 'Nombre',\r\n            'LedgerAccount': 'Cuenta Contable',\r\n            'ProjectStatus': 'Estado',\r\n            'CreatedOn': 'Fecha Creación',\r\n            'CreatedBy': 'Creado Por',\r\n            'ModifiedOn': 'Modificado',\r\n            'ModifiedBy': 'Modificado Por',\r\n            'Observations': 'Observaciones'\r\n        };\r\n\r\n        return translations[field] || field\r\n            .replace(/([a-z])([A-Z])/g, \"$1 $2\")\r\n            .replace(/_/g, \" \")\r\n            .replace(/^./, (c) => c.toUpperCase());\r\n    };\r\n\r\n    /**\r\n     * Formatear valor de celda según tipo\r\n     */\r\n    const formatCell = (value: unknown, field: string): string => {\r\n        if (value == null) return \"\";\r\n\r\n        // Booleanos\r\n        if (typeof value === \"boolean\") {\r\n            if (field === \"ProjectStatus\") {\r\n                return value\r\n                    ? '<span class=\"label label-success\">Activo</span>'\r\n                    : '<span class=\"label label-danger\">Inactivo</span>';\r\n            }\r\n            return value ? \"Sí\" : \"No\";\r\n        }\r\n\r\n        // Fechas\r\n        if (typeof value === \"string\" && /^\\d{4}-\\d{2}-\\d{2}T/.test(value)) {\r\n            const dt = new Date(value);\r\n            if (!isNaN(dt.getTime())) {\r\n                return dt.toLocaleDateString('es-DO', {\r\n                    day: '2-digit',\r\n                    month: '2-digit',\r\n                    year: 'numeric'\r\n                });\r\n            }\r\n        }\r\n\r\n        return String(value);\r\n    };\r\n\r\n    /**\r\n     * Realizar petición al API\r\n     */\r\n    const fetchJson = async (url: string): Promise<any> => {\r\n        const headers: Record<string, string> = {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        };\r\n\r\n        if (token) {\r\n            headers['Authorization'] = `Bearer ${token}`;\r\n        }\r\n\r\n        const response = await fetch(url, { headers });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP ${response.status} @ ${url}`);\r\n        }\r\n\r\n        return response.json();\r\n    };\r\n\r\n    // ========================================================================\r\n    // FUNCIONES PRINCIPALES\r\n    // ========================================================================\r\n\r\n    /**\r\n     * Obtener columnas desde primer registro\r\n     */\r\n    const getColumnsFromData = (sample: ProjectRow): string[] => {\r\n        if (!sample || typeof sample !== 'object') {\r\n            return ['ID', 'ProjectCode', 'Name', 'LedgerAccount', 'ProjectStatus', 'CreatedOn'];\r\n        }\r\n\r\n        const excluded = new Set(['RecID', 'RowVersion', 'DataareaID']);\r\n        return Object.keys(sample).filter(col => !excluded.has(col));\r\n    };\r\n\r\n    /**\r\n     * Inicializar DataTable\r\n     */\r\n    const initializeDataTable = (columns: string[]): void => {\r\n        // Limpiar thead\r\n        const theadHtml = `\r\n            <tr>\r\n                <th style=\"width:40px;\"><input type=\"checkbox\" id=\"check-all\" class=\"flat\"/></th>\r\n                ${columns.map(col => `<th data-field=\"${col}\">${titleize(col)}</th>`).join('')}\r\n            </tr>\r\n        `;\r\n        $table.find('thead').html(theadHtml);\r\n\r\n        // Inicializar iCheck para checkboxes\r\n        if ($.fn.iCheck) {\r\n            $('.flat').iCheck({\r\n                checkboxClass: 'icheckbox_flat-green'\r\n            });\r\n        }\r\n\r\n        // Configurar DataTable\r\n        const dtConfig: any = {\r\n            processing: true,\r\n            serverSide: false,\r\n            responsive: true,\r\n            autoWidth: false,\r\n            order: [[1, 'asc']], // Ordenar por primera columna después del checkbox\r\n            pageLength: 25,\r\n            lengthMenu: [[10, 25, 50, 100], [10, 25, 50, 100]],\r\n            language: {\r\n                lengthMenu: 'Mostrar _MENU_ registros',\r\n                zeroRecords: 'No se encontraron resultados',\r\n                info: 'Mostrando _START_ a _END_ de _TOTAL_ registros',\r\n                infoEmpty: 'No hay registros',\r\n                infoFiltered: '(filtrado de _MAX_ registros)',\r\n                search: 'Buscar:',\r\n                paginate: {\r\n                    first: 'Primera',\r\n                    last: 'Última',\r\n                    next: 'Siguiente',\r\n                    previous: 'Anterior'\r\n                },\r\n                processing: 'Procesando...'\r\n            },\r\n            columns: [\r\n                {\r\n                    data: null,\r\n                    orderable: false,\r\n                    searchable: false,\r\n                    className: 'text-center',\r\n                    render: (_data: any, _type: string, row: ProjectRow) => {\r\n                        return `<input type=\"checkbox\" class=\"flat row-check\" data-recid=\"${row.RecID || ''}\"/>`;\r\n                    }\r\n                },\r\n                ...columns.map(col => ({\r\n                    data: col,\r\n                    name: col,\r\n                    render: (data: unknown) => formatCell(data, col)\r\n                }))\r\n            ],\r\n            ajax: (_data: any, callback: (result: { data: ProjectRow[] }) => void) => {\r\n                loadProjects()\r\n                    .then(items => {\r\n                        projectsData = items;\r\n                        callback({ data: items });\r\n                        updateSummary(items.length);\r\n                    })\r\n                    .catch(err => {\r\n                        console.error('Error cargando proyectos:', err);\r\n                        showError(err.message);\r\n                        callback({ data: [] });\r\n                    });\r\n            },\r\n            drawCallback: function () {\r\n                // Re-inicializar iCheck después de cada draw\r\n                if ($.fn.iCheck) {\r\n                    $table.find('.flat').iCheck({\r\n                        checkboxClass: 'icheckbox_flat-green'\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        $table.DataTable(dtConfig);\r\n    };\r\n\r\n    /**\r\n     * Cargar proyectos desde API\r\n     */\r\n    const loadProjects = async (): Promise<ProjectRow[]> => {\r\n        const url = `${apiBase}/Projects?pageNumber=1&pageSize=1000`;\r\n        console.log('Cargando proyectos desde:', url);\r\n\r\n        const response: ProjectResponse = await fetchJson(url);\r\n\r\n        if (response?.Data && Array.isArray(response.Data)) {\r\n            console.log(`✓ ${response.Data.length} proyectos cargados`);\r\n            return response.Data;\r\n        }\r\n\r\n        throw new Error('Respuesta del API inválida');\r\n    };\r\n\r\n    /**\r\n     * Actualizar resumen de registros\r\n     */\r\n    const updateSummary = (count: number): void => {\r\n        const summary = d.getElementById('projects-summary');\r\n        if (summary) {\r\n            summary.textContent = `${count} proyecto${count !== 1 ? 's' : ''}`;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Mostrar error en la tabla\r\n     */\r\n    const showError = (message: string): void => {\r\n        const errorHtml = `\r\n            <tr>\r\n                <td colspan=\"10\" class=\"text-center text-danger\">\r\n                    <i class=\"fa fa-exclamation-triangle\"></i> ${message}\r\n                </td>\r\n            </tr>\r\n        `;\r\n        $table.find('tbody').html(errorHtml);\r\n    };\r\n\r\n    /**\r\n     * Actualizar estado de botones según selección\r\n     */\r\n    const updateButtonStates = (): void => {\r\n        const checkedCount = $table.find('tbody input.row-check:checked').length;\r\n        $('#btn-edit').prop('disabled', checkedCount !== 1);\r\n        $('#btn-delete').prop('disabled', checkedCount === 0);\r\n    };\r\n\r\n    /**\r\n     * Exportar a CSV\r\n     */\r\n    const exportToCSV = (): void => {\r\n        if (!projectsData.length) {\r\n            alert('No hay datos para exportar');\r\n            return;\r\n        }\r\n\r\n        const dt: any = $table.DataTable();\r\n        const rows: ProjectRow[] = dt.rows({ search: 'applied' }).data().toArray();\r\n\r\n        if (!rows.length) {\r\n            alert('No hay datos visibles para exportar');\r\n            return;\r\n        }\r\n\r\n        // Obtener columnas (excluyendo el checkbox)\r\n        const columns = dt.columns().header().toArray()\r\n            .slice(1) // Saltar checkbox\r\n            .map((th: HTMLElement) => th.getAttribute('data-field') || '');\r\n\r\n        // Crear CSV\r\n        const csvLines: string[] = [\r\n            columns.map(col => titleize(col)).join(',')\r\n        ];\r\n\r\n        rows.forEach(row => {\r\n            const line = columns.map(col => {\r\n                const value = (row as any)[col];\r\n                const str = value == null ? '' : String(value).replace(/\"/g, '\"\"');\r\n                return /[\",\\n]/.test(str) ? `\"${str}\"` : str;\r\n            }).join(',');\r\n            csvLines.push(line);\r\n        });\r\n\r\n        // Descargar archivo\r\n        const blob = new Blob([csvLines.join('\\n')], { type: 'text/csv;charset=utf-8;' });\r\n        const url = URL.createObjectURL(blob);\r\n        const link = d.createElement('a');\r\n        const fileName = `Proyectos_${new Date().toISOString().slice(0, 10)}.csv`;\r\n\r\n        link.href = url;\r\n        link.download = fileName;\r\n        link.style.visibility = 'hidden';\r\n        d.body.appendChild(link);\r\n        link.click();\r\n        d.body.removeChild(link);\r\n        URL.revokeObjectURL(url);\r\n    };\r\n\r\n    /**\r\n     * Eliminar proyecto\r\n     */\r\n    const deleteProject = async (recId: string): Promise<void> => {\r\n        const url = `${apiBase}/Projects/${recId}`;\r\n        const headers: Record<string, string> = {\r\n            'Authorization': `Bearer ${token}`\r\n        };\r\n\r\n        const response = await fetch(url, { method: 'DELETE', headers });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`Error al eliminar proyecto: ${response.status}`);\r\n        }\r\n    };\r\n\r\n    // ========================================================================\r\n    // EVENT HANDLERS\r\n    // ========================================================================\r\n\r\n    /**\r\n     * Checkbox \"Seleccionar todos\"\r\n     */\r\n    $(document).on('ifChanged', '#check-all', function (this: HTMLInputElement) {\r\n        const isChecked = $(this).is(':checked');\r\n        $table.find('tbody input.row-check').iCheck(isChecked ? 'check' : 'uncheck');\r\n    });\r\n\r\n    /**\r\n     * Checkboxes individuales\r\n     */\r\n    $(document).on('ifChanged', '.row-check', function () {\r\n        const total = $table.find('tbody input.row-check').length;\r\n        const checked = $table.find('tbody input.row-check:checked').length;\r\n\r\n        if (checked === total && total > 0) {\r\n            $('#check-all').iCheck('check');\r\n        } else {\r\n            $('#check-all').iCheck('uncheck');\r\n        }\r\n\r\n        updateButtonStates();\r\n    });\r\n\r\n    /**\r\n     * Botón Nuevo\r\n     */\r\n    $('#btn-new').on('click', () => {\r\n        window.location.href = '/Project/NewEdit';\r\n    });\r\n\r\n    /**\r\n     * Botón Editar\r\n     */\r\n    $('#btn-edit').on('click', () => {\r\n        const $checked = $table.find('tbody input.row-check:checked').first();\r\n        if ($checked.length) {\r\n            const recId = $checked.data('recid');\r\n            window.location.href = `/Project/NewEdit?recId=${recId}`;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Botón Eliminar\r\n     */\r\n    $('#btn-delete').on('click', async () => {\r\n        const $checked = $table.find('tbody input.row-check:checked');\r\n        const count = $checked.length;\r\n\r\n        if (count === 0) return;\r\n\r\n        const message = count === 1\r\n            ? '¿Está seguro de eliminar este proyecto?'\r\n            : `¿Está seguro de eliminar ${count} proyectos?`;\r\n\r\n        if (!confirm(message)) return;\r\n\r\n        try {\r\n            const promises: Promise<void>[] = [];\r\n            $checked.each(function () {\r\n                const recId = $(this).data('recid');\r\n                if (recId) {\r\n                    promises.push(deleteProject(recId));\r\n                }\r\n            });\r\n\r\n            await Promise.all(promises);\r\n            alert('Proyecto(s) eliminado(s) correctamente');\r\n\r\n            // Recargar tabla\r\n            $table.DataTable().ajax.reload();\r\n        } catch (error) {\r\n            console.error('Error al eliminar:', error);\r\n            alert('Error al eliminar proyecto(s)');\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Botón Exportar\r\n     */\r\n    $('#btn-export').on('click', exportToCSV);\r\n\r\n    /**\r\n     * Botón Importar\r\n     */\r\n    $('#btn-import').on('click', () => {\r\n        alert('Funcionalidad de importación próximamente');\r\n    });\r\n\r\n    /**\r\n     * Click en fila (toggle checkbox)\r\n     */\r\n    $table.on('click', 'tbody tr', function (e: any) {\r\n        if ($(e.target).is('input.row-check') || $(e.target).closest('.icheckbox_flat-green').length) {\r\n            return;\r\n        }\r\n\r\n        const $row = $(this);\r\n        const $checkbox = $row.find('input.row-check');\r\n\r\n        if ($checkbox.length) {\r\n            const isChecked = $checkbox.is(':checked');\r\n            $checkbox.iCheck(isChecked ? 'uncheck' : 'check');\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Evento personalizado para recargar\r\n     */\r\n    d.addEventListener('projects:list:reload', () => {\r\n        $table.DataTable().ajax.reload();\r\n    });\r\n\r\n    // ========================================================================\r\n    // INICIALIZACIÓN\r\n    // ========================================================================\r\n\r\n    $(async function () {\r\n        try {\r\n            console.log('Inicializando lista de proyectos...');\r\n            console.log('Token:', token ? '✓' : '✗');\r\n            console.log('DataareaID:', dataareaId);\r\n\r\n            // Hacer una petición de prueba para obtener estructura\r\n            const probeUrl = `${apiBase}/Projects?pageNumber=1&pageSize=1`;\r\n            const probe: ProjectResponse = await fetchJson(probeUrl);\r\n\r\n            let columns: string[] = [];\r\n\r\n            if (probe?.Data?.length) {\r\n                columns = getColumnsFromData(probe.Data[0]);\r\n            } else {\r\n                // Columnas por defecto si no hay datos\r\n                columns = ['ID', 'ProjectCode', 'Name', 'LedgerAccount', 'ProjectStatus', 'CreatedOn'];\r\n            }\r\n\r\n            console.log('Columnas detectadas:', columns);\r\n\r\n            // Inicializar DataTable con columnas dinámicas\r\n            initializeDataTable(columns);\r\n\r\n        } catch (error) {\r\n            console.error('Error en inicialización:', error);\r\n            showError('Error al cargar la configuración de la tabla');\r\n        }\r\n    });\r\n\r\n})();"]}