{"version":3,"file":"projects-dt.js","sourceRoot":"","sources":["../../../TS/Projects/projects-dt.ts"],"names":[],"mappings":"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","sourcesContent":["// ============================================================================\r\n// Archivo: projects-dt.ts\r\n// Proyecto: RH365 (Front-End MVC .NET 8)\r\n// Ruta: TS/projects/projects-dt.ts\r\n// Descripción:\r\n//   - Construye columnas/filas dinámicas para la tabla de Proyectos (DataTables).\r\n//   - Habilita reordenamiento (drag & drop) usando ColReorder.\r\n//   - Guarda automáticamente la vista personalizada del usuario en UserGridViews.\r\n//   - Restaura el layout guardado (orden, visibilidad, anchos) al iniciar.\r\n//   - Maneja exportación, selección y refresco de tabla.\r\n// Requisitos:\r\n//   - jQuery + DataTables + ColReorder cargados (vendors).\r\n//   - Endpoint /api/UserGridViews con métodos GET y POST/PUT.\r\n//   - Tabla con id=\"datatable-checkbox\".\r\n// ============================================================================\r\n\r\ntype RowObj = Record<string, unknown>;\r\ninterface PagedResponse<T> { items?: T[]; total?: number; }\r\ninterface UserGridView {\r\n    recID?: number;\r\n    userRefRecID: number;\r\n    entityName: string;\r\n    viewName: string;\r\n    isDefault?: boolean;\r\n    viewConfig: string;\r\n    dataareaID: string;\r\n}\r\n\r\n// ---- Utilidades ----\r\nconst titleize = (s: string): string =>\r\n    (s || \"\")\r\n        .replace(/([a-z])([A-Z])/g, \"$1 $2\")\r\n        .replace(/_/g, \" \")\r\n        .replace(/^./, (c) => c.toUpperCase());\r\n\r\nconst fmtCell = (v: unknown): string => {\r\n    if (v == null) return \"\";\r\n    if (typeof v === \"string\" && /^\\d{4}-\\d{2}-\\d{2}T/.test(v)) {\r\n        const d = new Date(v);\r\n        if (!isNaN(d.getTime())) return d.toLocaleDateString();\r\n    }\r\n    if (typeof v === \"boolean\") return v ? \"Sí\" : \"No\";\r\n    return String(v);\r\n};\r\n\r\nasync function fetchJson<T>(url: string, options?: RequestInit): Promise<T> {\r\n    const res = await fetch(url, options ?? { headers: { Accept: \"application/json\" } });\r\n    if (!res.ok) throw new Error(`HTTP ${res.status} @ ${url}`);\r\n    return (await res.json()) as T;\r\n}\r\n\r\nfunction inferColumns(sample: RowObj): string[] {\r\n    const preferred = [\"recID\", \"id\", \"projectCode\", \"projectName\", \"status\", \"owner\", \"startDate\", \"endDate\"];\r\n    const keys = Object.keys(sample);\r\n    const cols: string[] = [];\r\n    for (const k of preferred) {\r\n        const hit = keys.find((x) => x.toLowerCase() === k.toLowerCase());\r\n        if (hit && !cols.includes(hit)) cols.push(hit);\r\n    }\r\n    for (const k of keys) if (!cols.includes(k)) cols.push(k);\r\n    return cols;\r\n}\r\n\r\n// ============================================================================\r\n// IIFE principal\r\n// ============================================================================\r\n(function () {\r\n    const w: any = (window as any);\r\n    const d: Document = document;\r\n    const $: any = (w as any).jQuery || (w as any).$;\r\n\r\n    const apiBase: string = (w.RH365?.urls?.apiBase) || \"/api\";\r\n    const dataareaId: string =\r\n        (w.RH365?.ctx?.dataareaId) ||\r\n        (d.querySelector(\"#projects-page\")?.getAttribute(\"data-dataarea\") || \"DAT\");\r\n    const userRefRecID: number =\r\n        Number(d.querySelector(\"#projects-page\")?.getAttribute(\"data-user\") || 0);\r\n\r\n    const $table: any = $(\"#datatable-checkbox\");\r\n    if (!$table.length) return;\r\n\r\n    // Detectar si ColReorder está cargado\r\n    const hasColReorder: boolean = !!($.fn as any).dataTable?.ColReorder;\r\n\r\n    $(async function () {\r\n        try {\r\n            // 1) Evitar reinicialización\r\n            if ($.fn.DataTable.isDataTable($table)) {\r\n                $table.DataTable().clear().destroy();\r\n            }\r\n\r\n            // 2) Recuperar vista guardada (si existe)\r\n            let userView: UserGridView | null = null;\r\n            try {\r\n                userView = await fetchJson<UserGridView>(\r\n                    `${apiBase}/UserGridViews/by-entity?entityName=Projects&userRefRecID=${userRefRecID}`\r\n                );\r\n            } catch { userView = null; }\r\n\r\n            // 3) Obtener muestra para inferir columnas\r\n            const probeUrl = `${apiBase}/Projects?dataareaId=${encodeURIComponent(dataareaId)}&page=1&pageSize=1`;\r\n            const probe = await fetchJson<RowObj[] | PagedResponse<RowObj>>(probeUrl);\r\n            const sample: RowObj = (Array.isArray(probe) ? probe : (probe.items || []))[0] || {};\r\n            const defaultCols = inferColumns(sample);\r\n\r\n            // 4) Aplicar vista guardada (si existe)\r\n            let cols = defaultCols;\r\n            if (userView && userView.viewConfig) {\r\n                try {\r\n                    const parsed = JSON.parse(userView.viewConfig);\r\n                    if (parsed?.columns?.length) cols = parsed.columns.map((c: any) => c.field);\r\n                } catch { cols = defaultCols; }\r\n            }\r\n\r\n            // 5) Renderizar encabezado dinámico\r\n            const theadHtml = `\r\n        <tr>\r\n          <th style=\"width:36px;\"><input type=\"checkbox\" id=\"chk-all\"/></th>\r\n          ${cols.map((c) => `<th data-col=\"${c}\">${titleize(c)}</th>`).join(\"\")}\r\n        </tr>`;\r\n            $table.find(\"thead\").html(theadHtml);\r\n\r\n            // 6) Inicializar DataTable\r\n            const dt: any = $table.DataTable({\r\n                processing: true,\r\n                serverSide: false,\r\n                responsive: true,\r\n                autoWidth: false,\r\n                pageLength: 10,\r\n                lengthMenu: [[10, 25, 50, 100], [10, 25, 50, 100]],\r\n                order: [],\r\n                colReorder: hasColReorder ? { realtime: true, fixedColumnsLeft: 1 } : false,\r\n                stateSave: true,\r\n                stateDuration: 0,\r\n                language: {\r\n                    zeroRecords: \"No hay datos\",\r\n                    info: \"Mostrando _START_ a _END_ de _TOTAL_ entradas\",\r\n                    infoEmpty: \"0 registros\",\r\n                    search: \"Buscar:\",\r\n                    lengthMenu: \"Mostrar _MENU_ entradas\",\r\n                    paginate: { previous: \"Anterior\", next: \"Siguiente\" }\r\n                },\r\n                columns: [\r\n                    {\r\n                        data: null,\r\n                        orderable: false,\r\n                        className: \"text-center\",\r\n                        render: () => '<input type=\"checkbox\" class=\"row-chk\"/>'\r\n                    },\r\n                    ...cols.map((c) => ({\r\n                        data: c,\r\n                        name: c,\r\n                        render: (d: unknown) => fmtCell(d)\r\n                    }))\r\n                ],\r\n                ajax: (_data: unknown, callback: (arg: { data: RowObj[] }) => void) => {\r\n                    const url = `${apiBase}/Projects?dataareaId=${encodeURIComponent(dataareaId)}&page=1&pageSize=1000`;\r\n                    fetchJson<RowObj[] | PagedResponse<RowObj>>(url)\r\n                        .then((json) => {\r\n                            const items = Array.isArray(json) ? json : (json.items || []);\r\n                            callback({ data: items });\r\n                            const total = Array.isArray(json) ? items.length : (json.total ?? items.length);\r\n                            const summary = d.getElementById(\"prj-summary\");\r\n                            if (summary) summary.textContent = `${total} registros`;\r\n                        })\r\n                        .catch((err) => { console.error(err); callback({ data: [] }); });\r\n                }\r\n            });\r\n\r\n            // 7) Guardar vista automáticamente si el usuario reordena columnas\r\n            if (hasColReorder) {\r\n                dt.on(\"column-reorder\", () => {\r\n                    const order = dt.colReorder.order(); // array de posiciones\r\n                    const headers = dt.columns().header().toArray().slice(1); // sin checkbox\r\n                    const config = headers.map((h: any, i: number) => ({\r\n                        field: $(h).data(\"col\"),\r\n                        order: order[i + 1]\r\n                    }));\r\n                    const viewConfig = JSON.stringify({ columns: config });\r\n\r\n                    const payload: UserGridView = {\r\n                        userRefRecID,\r\n                        entityName: \"Projects\",\r\n                        viewName: \"Default\",\r\n                        isDefault: true,\r\n                        viewConfig,\r\n                        dataareaID: dataareaId\r\n                    };\r\n\r\n                    fetch(`${apiBase}/UserGridViews`, {\r\n                        method: userView ? \"PUT\" : \"POST\",\r\n                        headers: { \"Content-Type\": \"application/json\" },\r\n                        body: JSON.stringify(payload)\r\n                    }).catch(console.error);\r\n                });\r\n            }\r\n\r\n            // 8) Control de selección\r\n            const updateActions = (): void => {\r\n                const any = $table.find(\"tbody input.row-chk:checked\").length > 0;\r\n                $(\"#btn-prj-edit\").prop(\"disabled\", !any);\r\n                $(\"#btn-prj-delete\").prop(\"disabled\", !any);\r\n            };\r\n            $table.on(\"change\", \"tbody input.row-chk\", updateActions);\r\n            $table.on(\"click\", \"tbody tr\", (e: any) => {\r\n                if ($(e.target).is(\"input.row-chk\")) return;\r\n                const $chk = $(e.currentTarget).find(\"input.row-chk\");\r\n                $chk.prop(\"checked\", !$chk.prop(\"checked\"));\r\n                updateActions();\r\n            });\r\n            $table.on(\"change\", \"#chk-all\", function (this: HTMLInputElement) {\r\n                const checked = $(this).is(\":checked\");\r\n                $table.find(\"tbody input.row-chk\").prop(\"checked\", checked);\r\n                updateActions();\r\n            });\r\n\r\n            // 9) Export CSV\r\n            $(\"#btn-prj-export\").on(\"click\", () => {\r\n                const rows: RowObj[] = dt.rows({ search: \"applied\" }).data().toArray();\r\n                if (!rows.length) { alert(\"No hay datos para exportar.\"); return; }\r\n                const lines: string[] = [cols.join(\",\")];\r\n                rows.forEach((r) => {\r\n                    lines.push(\r\n                        cols.map((c) => {\r\n                            const v = r[c];\r\n                            const s = v == null ? \"\" : String(v).replace(/\"/g, '\"\"');\r\n                            return /[\",\\n]/.test(s) ? `\"${s}\"` : s;\r\n                        }).join(\",\")\r\n                    );\r\n                });\r\n                const blob = new Blob([lines.join(\"\\n\")], { type: \"text/csv;charset=utf-8;\" });\r\n                const url = URL.createObjectURL(blob);\r\n                const a = d.createElement(\"a\");\r\n                a.href = url;\r\n                a.download = `Projects_${new Date().toISOString().slice(0, 10)}.csv`;\r\n                d.body.appendChild(a); a.click(); d.body.removeChild(a);\r\n                URL.revokeObjectURL(url);\r\n            });\r\n\r\n            // 10) Refrescar tabla desde otros módulos\r\n            d.addEventListener(\"projects:list:reload\", () => dt.ajax.reload());\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    });\r\n})();\r\n"]}