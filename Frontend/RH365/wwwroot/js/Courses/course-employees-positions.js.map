{"version":3,"file":"course-employees-positions.js","sourceRoot":"","sources":["../../../TS/Courses/course-employees-positions.ts"],"names":[],"mappings":"AAAA,+EAA+E;AAC/E,yCAAyC;AACzC,yBAAyB;AACzB,iDAAiD;AACjD,eAAe;AACf,6DAA6D;AAC7D,uDAAuD;AACvD,0CAA0C;AAC1C,uDAAuD;AACvD,+EAA+E;;;;;;;;;;AAE/E,CAAC;;IACG,MAAM,CAAC,GAAQ,MAAM,CAAC;IACtB,MAAM,CAAC,GAAa,QAAQ,CAAC;IAC7B,MAAM,CAAC,GAAQ,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;IAE/B,MAAM,OAAO,GAAW,CAAA,MAAA,MAAA,CAAC,CAAC,KAAK,0CAAE,IAAI,0CAAE,OAAO,KAAI,EAAE,CAAC;IACrD,MAAM,aAAa,GAAG,CAAC,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;IAC3D,IAAI,CAAC,aAAa;QAAE,OAAO;IAE3B,MAAM,KAAK,GAAW,aAAa,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;IACrE,MAAM,KAAK,GAAW,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC;IACpF,MAAM,KAAK,GAAY,aAAa,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,MAAM,CAAC;IAE3E,8BAA8B;IAC9B,MAAM,CAAC,GAAI,CAAS,CAAC,MAAM,CAAC;IAC5B,MAAM,YAAY,GAAG,GAAG,EAAE;QACtB,IAAI,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK,UAAU,IAAI,OAAO,CAAC,CAAC,EAAE,KAAK,UAAU,IAAI,OAAO,CAAC,CAAC,KAAK,KAAK,UAAU,EAAE,CAAC;YACvG,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;QACnF,CAAC;IACL,CAAC,CAAC;IAEF,oBAAoB;IACpB,IAAI,YAAY,GAAU,EAAE,CAAC;IAC7B,IAAI,YAAY,GAAU,EAAE,CAAC;IAC7B,IAAI,iBAAiB,GAAkE,EAAE,CAAC;IAC1F,IAAI,iBAAiB,GAAkE,EAAE,CAAC;IAE1F,2EAA2E;IAC3E,oCAAoC;IACpC,2EAA2E;IAC3E,MAAM,SAAS,GAAG,CAAO,GAAW,EAAE,OAAqB,EAAgB,EAAE;QACzE,MAAM,OAAO,GAA2B,EAAE,QAAQ,EAAE,kBAAkB,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;QAC7G,IAAI,KAAK;YAAE,OAAO,CAAC,eAAe,CAAC,GAAG,UAAU,KAAK,EAAE,CAAC;QAExD,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,kCAAO,OAAO,KAAE,OAAO,IAAG,CAAC;QAE3D,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;YACf,MAAM,SAAS,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YACxD,MAAM,IAAI,KAAK,CAAC,SAAS,IAAI,QAAQ,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;QAC5D,CAAC;QAED,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG;YAAE,OAAO,IAAI,CAAC;QAEzC,MAAM,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC/D,OAAO,WAAW,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IAC7E,CAAC,CAAA,CAAC;IAEF,2EAA2E;IAC3E,qBAAqB;IACrB,2EAA2E;IAC3E,MAAM,gBAAgB,GAAG,GAAwB,EAAE;QAC/C,IAAI,CAAC;YACD,MAAM,IAAI,GAAG,MAAM,SAAS,CAAC,GAAG,OAAO,6BAA6B,CAAC,CAAC;YACtE,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,KAAI,EAAE,CAAC,CAAC;QACnE,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,CAAC,CAAC,KAAK,CAAC,uCAAuC,EAAE,OAAO,CAAC,CAAC;YAC1D,MAAM,KAAK,CAAC;QAChB,CAAC;IACL,CAAC,CAAA,CAAC;IAEF,MAAM,gBAAgB,GAAG,GAAwB,EAAE;QAC/C,IAAI,CAAC;YACD,MAAM,IAAI,GAAG,MAAM,SAAS,CAAC,GAAG,OAAO,6BAA6B,CAAC,CAAC;YACtE,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,KAAI,EAAE,CAAC,CAAC;QACnE,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,CAAC,CAAC,KAAK,CAAC,wCAAwC,EAAE,OAAO,CAAC,CAAC;YAC3D,MAAM,KAAK,CAAC;QAChB,CAAC;IACL,CAAC,CAAA,CAAC;IAEF,2EAA2E;IAC3E,8CAA8C;IAC9C,2EAA2E;IAC3E,MAAM,wBAAwB,GAAG,CAAC,SAAiB,EAAE,EAAQ,EAAE;QAC3D,MAAM,MAAM,GAAG,CAAC,CAAC,4BAA4B,CAAC,CAAC;QAC/C,MAAM,CAAC,KAAK,EAAE,CAAC;QAEf,IAAI,IAAI,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAE/F,IAAI,MAAM,EAAE,CAAC;YACT,MAAM,CAAC,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;YAC/B,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CACnB,CAAC,CAAC,CAAC,YAAY,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAChD,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACxC,CAAC,CAAC,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAC/C,CAAC;QACN,CAAC;QAED,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACpB,MAAM,CAAC,IAAI,CAAC,6HAA6H,CAAC,CAAC;YAC3I,OAAO;QACX,CAAC;QAED,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACb,MAAM,IAAI,GAAG,GAAG,CAAC,CAAC,IAAI,IAAI,EAAE,IAAI,CAAC,CAAC,QAAQ,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,IAAI,YAAY,CAAC;YAC1E,MAAM,CAAC,MAAM,CAAC;;8GAEoF,CAAC,CAAC,KAAK;wBAC7F,CAAC,CAAC,YAAY,IAAI,KAAK;wBACvB,IAAI;sBACN,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM;YAAE,CAAC,CAAC,oBAAoB,CAAC,CAAC,MAAM,CAAC,EAAE,aAAa,EAAE,sBAAsB,EAAE,CAAC,CAAC;IAC/F,CAAC,CAAC;IAEF,2EAA2E;IAC3E,+CAA+C;IAC/C,2EAA2E;IAC3E,MAAM,wBAAwB,GAAG,CAAC,SAAiB,EAAE,EAAQ,EAAE;QAC3D,MAAM,MAAM,GAAG,CAAC,CAAC,4BAA4B,CAAC,CAAC;QAC/C,MAAM,CAAC,KAAK,EAAE,CAAC;QAEf,IAAI,IAAI,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAE/F,IAAI,MAAM,EAAE,CAAC;YACT,MAAM,CAAC,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;YAC/B,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CACnB,CAAC,CAAC,CAAC,YAAY,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAChD,CAAC,CAAC,CAAC,YAAY,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CACnD,CAAC;QACN,CAAC;QAED,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACpB,MAAM,CAAC,IAAI,CAAC,8HAA8H,CAAC,CAAC;YAC5I,OAAO;QACX,CAAC;QAED,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACb,MAAM,CAAC,MAAM,CAAC;;8GAEoF,CAAC,CAAC,KAAK;wBAC7F,CAAC,CAAC,YAAY,IAAI,KAAK;wBACvB,CAAC,CAAC,YAAY,IAAI,KAAK;sBACzB,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM;YAAE,CAAC,CAAC,oBAAoB,CAAC,CAAC,MAAM,CAAC,EAAE,aAAa,EAAE,sBAAsB,EAAE,CAAC,CAAC;IAC/F,CAAC,CAAC;IAEF,2EAA2E;IAC3E,oCAAoC;IACpC,2EAA2E;IAC3E,MAAM,uBAAuB,GAAG,GAAS,EAAE;QACvC,MAAM,MAAM,GAAG,CAAC,CAAC,yBAAyB,CAAC,CAAC;QAC5C,MAAM,CAAC,KAAK,EAAE,CAAC;QAEf,IAAI,iBAAiB,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACjC,MAAM,CAAC,IAAI,CAAC,oIAAoI,CAAC,CAAC;YAClJ,OAAO;QACX,CAAC;QAED,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC7B,MAAM,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,aAAa,CAAC,CAAC;YACjE,IAAI,CAAC,CAAC;gBAAE,OAAO;YAEf,MAAM,IAAI,GAAG,GAAG,CAAC,CAAC,IAAI,IAAI,EAAE,IAAI,CAAC,CAAC,QAAQ,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,IAAI,YAAY,CAAC;YAC1E,MAAM,CAAC,MAAM,CAAC;;uHAE6F,IAAI,CAAC,aAAa;wBACjH,CAAC,CAAC,YAAY,IAAI,KAAK;wBACvB,IAAI;;;0CAGc,IAAI,CAAC,aAAa;0DACF,IAAI,CAAC,mBAAmB;;;;;sBAK5D,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM;YAAE,CAAC,CAAC,6BAA6B,CAAC,CAAC,MAAM,CAAC,EAAE,aAAa,EAAE,sBAAsB,EAAE,CAAC,CAAC;IACxG,CAAC,CAAC;IAEF,2EAA2E;IAC3E,qCAAqC;IACrC,2EAA2E;IAC3E,MAAM,uBAAuB,GAAG,GAAS,EAAE;QACvC,MAAM,MAAM,GAAG,CAAC,CAAC,yBAAyB,CAAC,CAAC;QAC5C,MAAM,CAAC,KAAK,EAAE,CAAC;QAEf,IAAI,iBAAiB,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACjC,MAAM,CAAC,IAAI,CAAC,qIAAqI,CAAC,CAAC;YACnJ,OAAO;QACX,CAAC;QAED,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC7B,MAAM,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,aAAa,CAAC,CAAC;YACjE,IAAI,CAAC,CAAC;gBAAE,OAAO;YAEf,MAAM,CAAC,MAAM,CAAC;;uHAE6F,IAAI,CAAC,aAAa;wBACjH,CAAC,CAAC,YAAY,IAAI,KAAK;wBACvB,CAAC,CAAC,YAAY,IAAI,KAAK;;;0CAGL,IAAI,CAAC,aAAa;0DACF,IAAI,CAAC,mBAAmB;;;;;sBAK5D,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM;YAAE,CAAC,CAAC,6BAA6B,CAAC,CAAC,MAAM,CAAC,EAAE,aAAa,EAAE,sBAAsB,EAAE,CAAC,CAAC;IACxG,CAAC,CAAC;IAEF,2EAA2E;IAC3E,2BAA2B;IAC3B,2EAA2E;IAC3E,MAAM,gBAAgB,GAAG,GAAwB,EAAE;QAC/C,IAAI,KAAK,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC;YACtB,uBAAuB,EAAE,CAAC;YAC1B,uBAAuB,EAAE,CAAC;YAC1B,OAAO;QACX,CAAC;QAED,IAAI,CAAC;YACD,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;gBACzC,SAAS,CAAC,GAAG,OAAO,kBAAkB,CAAC;gBACvC,SAAS,CAAC,GAAG,OAAO,kBAAkB,CAAC;aAC1C,CAAC,CAAC;YAEH,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,KAAI,EAAE,CAAC,CAAC;YACzE,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,KAAI,EAAE,CAAC,CAAC;YAEzE,iBAAiB,GAAG,OAAO;iBACtB,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,cAAc,KAAK,KAAK,CAAC;iBAC9C,GAAG,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,EAAE,aAAa,EAAE,CAAC,CAAC,gBAAgB,EAAE,mBAAmB,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAE5F,iBAAiB,GAAG,OAAO;iBACtB,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,cAAc,KAAK,KAAK,CAAC;iBAC9C,GAAG,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,EAAE,aAAa,EAAE,CAAC,CAAC,gBAAgB,EAAE,mBAAmB,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAE5F,uBAAuB,EAAE,CAAC;YAC1B,uBAAuB,EAAE,CAAC;QAC9B,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,CAAC,CAAC,KAAK,CAAC,8CAA8C,EAAE,OAAO,CAAC,CAAC;YACjE,MAAM,KAAK,CAAC;QAChB,CAAC;IACL,CAAC,CAAA,CAAC;IAEF,2EAA2E;IAC3E,oBAAoB;IACpB,2EAA2E;IAC3E,CAAC,CAAC,qBAAqB,CAAC,CAAC,EAAE,CAAC,eAAe,EAAE,GAAG,EAAE,CAAC,wBAAwB,EAAE,CAAC,CAAC;IAC/E,CAAC,CAAC,qBAAqB,CAAC,CAAC,EAAE,CAAC,eAAe,EAAE,GAAG,EAAE,CAAC,wBAAwB,EAAE,CAAC,CAAC;IAE/E,CAAC,CAAC,wCAAwC,CAAC,CAAC,EAAE,CAAC,cAAc,EAAE,UAAU,CAAM;QAC3E,IAAI,CAAC,CAAC,IAAI,KAAK,OAAO,IAAI,CAAC,CAAC,OAAO,KAAK,EAAE;YAAE,OAAO;QACnD,wBAAwB,CAAC,MAAM,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACxE,CAAC,CAAC,CAAC;IAEH,CAAC,CAAC,wCAAwC,CAAC,CAAC,EAAE,CAAC,cAAc,EAAE,UAAU,CAAM;QAC3E,IAAI,CAAC,CAAC,IAAI,KAAK,OAAO,IAAI,CAAC,CAAC,OAAO,KAAK,EAAE;YAAE,OAAO;QACnD,wBAAwB,CAAC,MAAM,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACxE,CAAC,CAAC,CAAC;IAEH,2EAA2E;IAC3E,kCAAkC;IAClC,2EAA2E;IAC3E,CAAC,CAAC,4BAA4B,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE;;YACxC,YAAY,EAAE,CAAC;YAEf,MAAM,QAAQ,GAAa,EAAE,CAAC;YAC9B,CAAC,CAAC,4DAA4D,CAAC,CAAC,IAAI,CAAC;gBACjE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACzC,CAAC,CAAC,CAAC;YAEH,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBACxB,CAAC,CAAC,IAAI,CAAC,uCAAuC,EAAE,aAAa,CAAC,CAAC;gBAC/D,OAAO;YACX,CAAC;YAED,IAAI,CAAC;gBACD,KAAK,MAAM,QAAQ,IAAI,QAAQ,EAAE,CAAC;oBAC9B,MAAM,IAAI,GAAG,MAAM,SAAS,CAAC,GAAG,OAAO,kBAAkB,EAAE;wBACvD,MAAM,EAAE,MAAM;wBACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;4BACjB,cAAc,EAAE,KAAK;4BACrB,gBAAgB,EAAE,QAAQ;4BAC1B,OAAO,EAAE,EAAE;4BACX,YAAY,EAAE,EAAE;yBACnB,CAAC;qBACL,CAAC,CAAC;oBACH,iBAAiB,CAAC,IAAI,CAAC,EAAE,aAAa,EAAE,QAAQ,EAAE,mBAAmB,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;gBACzF,CAAC;gBAED,uBAAuB,EAAE,CAAC;gBAC1B,CAAC,CAAC,qBAAqB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBACvC,CAAC,CAAC,EAAE,CAAC,MAAM,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,IAAI,QAAQ,CAAC,MAAM,YAAY,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;YAChJ,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACb,CAAC,CAAC,KAAK,CAAC,qCAAqC,EAAE,OAAO,CAAC,CAAC;YAC5D,CAAC;QACL,CAAC;KAAA,CAAC,CAAC;IAEH,2EAA2E;IAC3E,mCAAmC;IACnC,2EAA2E;IAC3E,CAAC,CAAC,4BAA4B,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE;;YACxC,YAAY,EAAE,CAAC;YAEf,MAAM,QAAQ,GAAa,EAAE,CAAC;YAC9B,CAAC,CAAC,4DAA4D,CAAC,CAAC,IAAI,CAAC;gBACjE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACzC,CAAC,CAAC,CAAC;YAEH,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBACxB,CAAC,CAAC,IAAI,CAAC,wCAAwC,EAAE,aAAa,CAAC,CAAC;gBAChE,OAAO;YACX,CAAC;YAED,IAAI,CAAC;gBACD,KAAK,MAAM,QAAQ,IAAI,QAAQ,EAAE,CAAC;oBAC9B,MAAM,IAAI,GAAG,MAAM,SAAS,CAAC,GAAG,OAAO,kBAAkB,EAAE;wBACvD,MAAM,EAAE,MAAM;wBACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;4BACjB,cAAc,EAAE,KAAK;4BACrB,gBAAgB,EAAE,QAAQ;4BAC1B,OAAO,EAAE,EAAE;4BACX,YAAY,EAAE,EAAE;yBACnB,CAAC;qBACL,CAAC,CAAC;oBACH,iBAAiB,CAAC,IAAI,CAAC,EAAE,aAAa,EAAE,QAAQ,EAAE,mBAAmB,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;gBACzF,CAAC;gBAED,uBAAuB,EAAE,CAAC;gBAC1B,CAAC,CAAC,qBAAqB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBACvC,CAAC,CAAC,EAAE,CAAC,MAAM,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,IAAI,QAAQ,CAAC,MAAM,YAAY,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;YACjJ,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACb,CAAC,CAAC,KAAK,CAAC,sCAAsC,EAAE,OAAO,CAAC,CAAC;YAC7D,CAAC;QACL,CAAC;KAAA,CAAC,CAAC;IAEH,2EAA2E;IAC3E,+BAA+B;IAC/B,2EAA2E;IAC3E,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,sBAAsB,EAAE;QACrC,YAAY,EAAE,CAAC;QAEf,MAAM,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvC,MAAM,cAAc,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAE5D,CAAS,CAAC,MAAM,CAAC,OAAO,CACrB,mDAAmD,EACnD,uBAAuB,EACvB,CAAO,SAAkB,EAAE,EAAE;YACzB,IAAI,CAAC,SAAS;gBAAE,OAAO;YAEvB,IAAI,CAAC;gBACD,MAAM,SAAS,CAAC,GAAG,OAAO,oBAAoB,cAAc,EAAE,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAC;gBACtF,iBAAiB,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,KAAK,QAAQ,CAAC,CAAC;gBAChF,uBAAuB,EAAE,CAAC;gBAC1B,CAAC,CAAC,EAAE,CAAC,yCAAyC,EAAE,OAAO,CAAC,CAAC;YAC7D,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACb,CAAC,CAAC,KAAK,CAAC,yCAAyC,EAAE,OAAO,CAAC,CAAC;YAChE,CAAC;QACL,CAAC,CAAA,EACD,EAAE,IAAI,EAAE,QAAQ,EAAE,CACrB,CAAC;IACN,CAAC,CAAC,CAAC;IAEH,2EAA2E;IAC3E,+BAA+B;IAC/B,2EAA2E;IAC3E,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,sBAAsB,EAAE;QACrC,YAAY,EAAE,CAAC;QAEf,MAAM,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvC,MAAM,cAAc,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;QAE5D,CAAS,CAAC,MAAM,CAAC,OAAO,CACrB,mDAAmD,EACnD,uBAAuB,EACvB,CAAO,SAAkB,EAAE,EAAE;YACzB,IAAI,CAAC,SAAS;gBAAE,OAAO;YAEvB,IAAI,CAAC;gBACD,MAAM,SAAS,CAAC,GAAG,OAAO,oBAAoB,cAAc,EAAE,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAC;gBACtF,iBAAiB,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,KAAK,QAAQ,CAAC,CAAC;gBAChF,uBAAuB,EAAE,CAAC;gBAC1B,CAAC,CAAC,EAAE,CAAC,yCAAyC,EAAE,OAAO,CAAC,CAAC;YAC7D,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACb,CAAC,CAAC,KAAK,CAAC,yCAAyC,EAAE,OAAO,CAAC,CAAC;YAChE,CAAC;QACL,CAAC,CAAA,EACD,EAAE,IAAI,EAAE,QAAQ,EAAE,CACrB,CAAC;IACN,CAAC,CAAC,CAAC;IAEH,2EAA2E;IAC3E,+BAA+B;IAC/B,2EAA2E;IAC3E,CAAC,CAAC,gCAAgC,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE;QAC5C,YAAY,EAAE,CAAC;QAEf,MAAM,QAAQ,GAA6D,EAAE,CAAC;QAC9E,CAAC,CAAC,kEAAkE,CAAC,CAAC,IAAI,CAAC;YACvE,MAAM,KAAK,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACrF,IAAI,KAAK;gBAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO;QAElC,MAAM,OAAO,GAAG,QAAQ,CAAC,MAAM,KAAK,CAAC;YACjC,CAAC,CAAC,mDAAmD;YACrD,CAAC,CAAC,gCAAgC,QAAQ,CAAC,MAAM,qCAAqC,CAAC;QAE1F,CAAS,CAAC,MAAM,CAAC,OAAO,CACrB,OAAO,EACP,uBAAuB,EACvB,CAAO,SAAkB,EAAE,EAAE;YACzB,IAAI,CAAC,SAAS;gBAAE,OAAO;YAEvB,IAAI,CAAC;gBACD,KAAK,MAAM,IAAI,IAAI,QAAQ,EAAE,CAAC;oBAC1B,MAAM,SAAS,CAAC,GAAG,OAAO,oBAAoB,IAAI,CAAC,mBAAmB,EAAE,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAC;gBACpG,CAAC;gBACD,iBAAiB,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,KAAK,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBAC5G,uBAAuB,EAAE,CAAC;gBAC1B,CAAC,CAAC,EAAE,CAAC,MAAM,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,YAAY,IAAI,QAAQ,CAAC,MAAM,YAAY,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;YACnJ,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACb,CAAC,CAAC,KAAK,CAAC,2CAA2C,EAAE,OAAO,CAAC,CAAC;YAClE,CAAC;QACL,CAAC,CAAA,EACD,EAAE,IAAI,EAAE,QAAQ,EAAE,CACrB,CAAC;IACN,CAAC,CAAC,CAAC;IAEH,2EAA2E;IAC3E,gCAAgC;IAChC,2EAA2E;IAC3E,CAAC,CAAC,gCAAgC,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE;QAC5C,YAAY,EAAE,CAAC;QAEf,MAAM,QAAQ,GAA6D,EAAE,CAAC;QAC9E,CAAC,CAAC,kEAAkE,CAAC,CAAC,IAAI,CAAC;YACvE,MAAM,KAAK,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACrF,IAAI,KAAK;gBAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO;QAElC,MAAM,OAAO,GAAG,QAAQ,CAAC,MAAM,KAAK,CAAC;YACjC,CAAC,CAAC,mDAAmD;YACrD,CAAC,CAAC,gCAAgC,QAAQ,CAAC,MAAM,sCAAsC,CAAC;QAE3F,CAAS,CAAC,MAAM,CAAC,OAAO,CACrB,OAAO,EACP,uBAAuB,EACvB,CAAO,SAAkB,EAAE,EAAE;YACzB,IAAI,CAAC,SAAS;gBAAE,OAAO;YAEvB,IAAI,CAAC;gBACD,KAAK,MAAM,IAAI,IAAI,QAAQ,EAAE,CAAC;oBAC1B,MAAM,SAAS,CAAC,GAAG,OAAO,oBAAoB,IAAI,CAAC,mBAAmB,EAAE,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAC;gBACpG,CAAC;gBACD,iBAAiB,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,KAAK,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBAC5G,uBAAuB,EAAE,CAAC;gBAC1B,CAAC,CAAC,EAAE,CAAC,MAAM,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,YAAY,IAAI,QAAQ,CAAC,MAAM,YAAY,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;YACpJ,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACb,CAAC,CAAC,KAAK,CAAC,4CAA4C,EAAE,OAAO,CAAC,CAAC;YACnE,CAAC;QACL,CAAC,CAAA,EACD,EAAE,IAAI,EAAE,QAAQ,EAAE,CACrB,CAAC;IACN,CAAC,CAAC,CAAC;IAEH,2EAA2E;IAC3E,2BAA2B;IAC3B,2EAA2E;IAC3E,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,6BAA6B,EAAE;QAChD,CAAC,CAAC,gCAAgC,CAAC,CAAC,IAAI,CAAC,UAAU,EAC/C,CAAC,CAAC,kEAAkE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;IAC5F,CAAC,CAAC,CAAC;IAEH,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,6BAA6B,EAAE;QAChD,CAAC,CAAC,gCAAgC,CAAC,CAAC,IAAI,CAAC,UAAU,EAC/C,CAAC,CAAC,kEAAkE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;IAC5F,CAAC,CAAC,CAAC;IAEH,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,4BAA4B,EAAE;QAC/C,CAAC,CAAC,oBAAoB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IACjF,CAAC,CAAC,CAAC;IAEH,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,4BAA4B,EAAE;QAC/C,CAAC,CAAC,oBAAoB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IACjF,CAAC,CAAC,CAAC;IAEH,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,sBAAsB,EAAE;QACzC,CAAC,CAAC,6BAA6B,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IAC1F,CAAC,CAAC,CAAC;IAEH,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,sBAAsB,EAAE;QACzC,CAAC,CAAC,6BAA6B,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IAC1F,CAAC,CAAC,CAAC;IAEH,2EAA2E;IAC3E,iBAAiB;IACjB,2EAA2E;IAC3E,CAAC,CAAC;;YACE,IAAI,CAAC;gBACD,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,gBAAgB,EAAE,EAAE,gBAAgB,EAAE,CAAC,CAAC,CAAC;gBAC5D,MAAM,gBAAgB,EAAE,CAAC;YAC7B,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACb,CAAC,CAAC,KAAK,CAAC,0DAA0D,EAAE,yBAAyB,CAAC,CAAC;YACnG,CAAC;QACL,CAAC;KAAA,CAAC,CAAC;AACP,CAAC,CAAC,EAAE,CAAC","sourcesContent":["// ============================================================================\r\n// Archivo: course-employees-positions.ts\r\n// Proyecto: RH365.WebMVC\r\n// Ruta: TS/Courses/course-employees-positions.ts\r\n// Descripción:\r\n//   - Gestión de empleados y posiciones asignados a un Curso\r\n//   - Validaciones y confirmaciones con sistema ALERTS\r\n//   - CRUD completo con manejo de errores\r\n// Estándar: ISO 27001 - Gestión de relaciones de datos\r\n// ============================================================================\r\n\r\n(function () {\r\n    const w: any = window;\r\n    const d: Document = document;\r\n    const $: any = w.jQuery || w.$;\r\n\r\n    const apiBase: string = w.RH365?.urls?.apiBase || '';\r\n    const pageContainer = d.querySelector(\"#course-form-page\");\r\n    if (!pageContainer) return;\r\n\r\n    const token: string = pageContainer.getAttribute(\"data-token\") || \"\";\r\n    const recId: number = parseInt(pageContainer.getAttribute(\"data-recid\") || \"0\", 10);\r\n    const isNew: boolean = pageContainer.getAttribute(\"data-isnew\") === \"true\";\r\n\r\n    // Acceso a sistema de alertas\r\n    const A = (w as any).ALERTS;\r\n    const assertAlerts = () => {\r\n        if (!A || typeof A.confirm !== 'function' || typeof A.ok !== 'function' || typeof A.error !== 'function') {\r\n            throw new Error(\"Sistema ALERTS no disponible. Verifica la carga de scripts.\");\r\n        }\r\n    };\r\n\r\n    // Estado en memoria\r\n    let allEmployees: any[] = [];\r\n    let allPositions: any[] = [];\r\n    let assignedEmployees: Array<{ EmployeeRecID: number; CourseEmployeeRecID: number }> = [];\r\n    let assignedPositions: Array<{ PositionRecID: number; CoursePositionRecID: number }> = [];\r\n\r\n    // ========================================================================\r\n    // UTILIDADES - COMUNICACIÓN CON API\r\n    // ========================================================================\r\n    const fetchJson = async (url: string, options?: RequestInit): Promise<any> => {\r\n        const headers: Record<string, string> = { 'Accept': 'application/json', 'Content-Type': 'application/json' };\r\n        if (token) headers['Authorization'] = `Bearer ${token}`;\r\n\r\n        const response = await fetch(url, { ...options, headers });\r\n\r\n        if (!response.ok) {\r\n            const errorText = await response.text().catch(() => '');\r\n            throw new Error(errorText || `HTTP ${response.status}`);\r\n        }\r\n\r\n        if (response.status === 204) return null;\r\n\r\n        const contentType = response.headers.get('content-type') || '';\r\n        return contentType.includes('application/json') ? response.json() : null;\r\n    };\r\n\r\n    // ========================================================================\r\n    // CARGA DE CATÁLOGOS\r\n    // ========================================================================\r\n    const loadAllEmployees = async (): Promise<void> => {\r\n        try {\r\n            const resp = await fetchJson(`${apiBase}/Employees?skip=0&take=5000`);\r\n            allEmployees = Array.isArray(resp) ? resp : (resp?.Data || []);\r\n        } catch (error) {\r\n            A.error('Error al cargar catálogo de empleados', 'Error');\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const loadAllPositions = async (): Promise<void> => {\r\n        try {\r\n            const resp = await fetchJson(`${apiBase}/Positions?skip=0&take=5000`);\r\n            allPositions = Array.isArray(resp) ? resp : (resp?.Data || []);\r\n        } catch (error) {\r\n            A.error('Error al cargar catálogo de posiciones', 'Error');\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    // ========================================================================\r\n    // RENDERIZADO - EMPLEADOS DISPONIBLES (MODAL)\r\n    // ========================================================================\r\n    const renderAvailableEmployees = (search: string = ''): void => {\r\n        const $tbody = $('#tbody-available-employees');\r\n        $tbody.empty();\r\n\r\n        let rows = allEmployees.filter(e => !assignedEmployees.some(a => a.EmployeeRecID === e.RecID));\r\n\r\n        if (search) {\r\n            const s = search.toLowerCase();\r\n            rows = rows.filter(e =>\r\n                (e.EmployeeCode || '').toLowerCase().includes(s) ||\r\n                (e.Name || '').toLowerCase().includes(s) ||\r\n                (e.LastName || '').toLowerCase().includes(s)\r\n            );\r\n        }\r\n\r\n        if (rows.length === 0) {\r\n            $tbody.html('<tr><td colspan=\"3\" class=\"text-center text-muted\"><i class=\"fa fa-info-circle\"></i> No hay empleados disponibles</td></tr>');\r\n            return;\r\n        }\r\n\r\n        rows.forEach(e => {\r\n            const name = `${e.Name || ''} ${e.LastName || ''}`.trim() || 'Sin nombre';\r\n            $tbody.append(`\r\n                <tr>\r\n                  <td class=\"text-center\"><input type=\"checkbox\" class=\"flat employee-checkbox\" data-recid=\"${e.RecID}\"/></td>\r\n                  <td>${e.EmployeeCode || 'N/A'}</td>\r\n                  <td>${name}</td>\r\n                </tr>`);\r\n        });\r\n\r\n        if ($.fn.iCheck) $('.employee-checkbox').iCheck({ checkboxClass: 'icheckbox_flat-green' });\r\n    };\r\n\r\n    // ========================================================================\r\n    // RENDERIZADO - POSICIONES DISPONIBLES (MODAL)\r\n    // ========================================================================\r\n    const renderAvailablePositions = (search: string = ''): void => {\r\n        const $tbody = $('#tbody-available-positions');\r\n        $tbody.empty();\r\n\r\n        let rows = allPositions.filter(p => !assignedPositions.some(a => a.PositionRecID === p.RecID));\r\n\r\n        if (search) {\r\n            const s = search.toLowerCase();\r\n            rows = rows.filter(p =>\r\n                (p.PositionCode || '').toLowerCase().includes(s) ||\r\n                (p.PositionName || '').toLowerCase().includes(s)\r\n            );\r\n        }\r\n\r\n        if (rows.length === 0) {\r\n            $tbody.html('<tr><td colspan=\"3\" class=\"text-center text-muted\"><i class=\"fa fa-info-circle\"></i> No hay posiciones disponibles</td></tr>');\r\n            return;\r\n        }\r\n\r\n        rows.forEach(p => {\r\n            $tbody.append(`\r\n                <tr>\r\n                  <td class=\"text-center\"><input type=\"checkbox\" class=\"flat position-checkbox\" data-recid=\"${p.RecID}\"/></td>\r\n                  <td>${p.PositionCode || 'N/A'}</td>\r\n                  <td>${p.PositionName || 'N/A'}</td>\r\n                </tr>`);\r\n        });\r\n\r\n        if ($.fn.iCheck) $('.position-checkbox').iCheck({ checkboxClass: 'icheckbox_flat-green' });\r\n    };\r\n\r\n    // ========================================================================\r\n    // RENDERIZADO - EMPLEADOS ASIGNADOS\r\n    // ========================================================================\r\n    const renderAssignedEmployees = (): void => {\r\n        const $tbody = $('#tbody-course-employees');\r\n        $tbody.empty();\r\n\r\n        if (assignedEmployees.length === 0) {\r\n            $tbody.html('<tr><td colspan=\"4\" class=\"text-center text-muted\"><i class=\"fa fa-info-circle\"></i> No hay empleados asignados al curso</td></tr>');\r\n            return;\r\n        }\r\n\r\n        assignedEmployees.forEach(item => {\r\n            const e = allEmployees.find(x => x.RecID === item.EmployeeRecID);\r\n            if (!e) return;\r\n\r\n            const name = `${e.Name || ''} ${e.LastName || ''}`.trim() || 'Sin nombre';\r\n            $tbody.append(`\r\n                <tr>\r\n                  <td class=\"text-center\"><input type=\"checkbox\" class=\"flat assigned-employee-checkbox\" data-recid=\"${item.EmployeeRecID}\"/></td>\r\n                  <td>${e.EmployeeCode || 'N/A'}</td>\r\n                  <td>${name}</td>\r\n                  <td class=\"text-center\">\r\n                    <button type=\"button\" class=\"btn btn-danger btn-xs btn-delete-employee\"\r\n                            data-recid=\"${item.EmployeeRecID}\"\r\n                            data-course-employee-recid=\"${item.CourseEmployeeRecID}\"\r\n                            title=\"Eliminar empleado\">\r\n                      <i class=\"fa fa-trash\"></i>\r\n                    </button>\r\n                  </td>\r\n                </tr>`);\r\n        });\r\n\r\n        if ($.fn.iCheck) $('.assigned-employee-checkbox').iCheck({ checkboxClass: 'icheckbox_flat-green' });\r\n    };\r\n\r\n    // ========================================================================\r\n    // RENDERIZADO - POSICIONES ASIGNADAS\r\n    // ========================================================================\r\n    const renderAssignedPositions = (): void => {\r\n        const $tbody = $('#tbody-course-positions');\r\n        $tbody.empty();\r\n\r\n        if (assignedPositions.length === 0) {\r\n            $tbody.html('<tr><td colspan=\"4\" class=\"text-center text-muted\"><i class=\"fa fa-info-circle\"></i> No hay posiciones asignadas al curso</td></tr>');\r\n            return;\r\n        }\r\n\r\n        assignedPositions.forEach(item => {\r\n            const p = allPositions.find(x => x.RecID === item.PositionRecID);\r\n            if (!p) return;\r\n\r\n            $tbody.append(`\r\n                <tr>\r\n                  <td class=\"text-center\"><input type=\"checkbox\" class=\"flat assigned-position-checkbox\" data-recid=\"${item.PositionRecID}\"/></td>\r\n                  <td>${p.PositionCode || 'N/A'}</td>\r\n                  <td>${p.PositionName || 'N/A'}</td>\r\n                  <td class=\"text-center\">\r\n                    <button type=\"button\" class=\"btn btn-danger btn-xs btn-delete-position\"\r\n                            data-recid=\"${item.PositionRecID}\"\r\n                            data-course-position-recid=\"${item.CoursePositionRecID}\"\r\n                            title=\"Eliminar posición\">\r\n                      <i class=\"fa fa-trash\"></i>\r\n                    </button>\r\n                  </td>\r\n                </tr>`);\r\n        });\r\n\r\n        if ($.fn.iCheck) $('.assigned-position-checkbox').iCheck({ checkboxClass: 'icheckbox_flat-green' });\r\n    };\r\n\r\n    // ========================================================================\r\n    // CARGA DE DATOS ASIGNADOS\r\n    // ========================================================================\r\n    const loadAssignedData = async (): Promise<void> => {\r\n        if (isNew || recId <= 0) {\r\n            renderAssignedEmployees();\r\n            renderAssignedPositions();\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const [empResp, posResp] = await Promise.all([\r\n                fetchJson(`${apiBase}/CourseEmployees`),\r\n                fetchJson(`${apiBase}/CoursePositions`)\r\n            ]);\r\n\r\n            const empData = Array.isArray(empResp) ? empResp : (empResp?.Data || []);\r\n            const posData = Array.isArray(posResp) ? posResp : (posResp?.Data || []);\r\n\r\n            assignedEmployees = empData\r\n                .filter((e: any) => e.CourseRefRecID === recId)\r\n                .map((e: any) => ({ EmployeeRecID: e.EmployeeRefRecID, CourseEmployeeRecID: e.RecID }));\r\n\r\n            assignedPositions = posData\r\n                .filter((p: any) => p.CourseRefRecID === recId)\r\n                .map((p: any) => ({ PositionRecID: p.PositionRefRecID, CoursePositionRecID: p.RecID }));\r\n\r\n            renderAssignedEmployees();\r\n            renderAssignedPositions();\r\n        } catch (error) {\r\n            A.error('Error al cargar los datos asignados al curso', 'Error');\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    // ========================================================================\r\n    // EVENTOS - MODALES\r\n    // ========================================================================\r\n    $('#modal-add-employee').on('show.bs.modal', () => renderAvailableEmployees());\r\n    $('#modal-add-position').on('show.bs.modal', () => renderAvailablePositions());\r\n\r\n    $('#btn-search-employee, #employee-search').on('keyup change', function (e: any) {\r\n        if (e.type === 'keyup' && e.keyCode !== 13) return;\r\n        renderAvailableEmployees(String($('#employee-search').val() || ''));\r\n    });\r\n\r\n    $('#btn-search-position, #position-search').on('keyup change', function (e: any) {\r\n        if (e.type === 'keyup' && e.keyCode !== 13) return;\r\n        renderAvailablePositions(String($('#position-search').val() || ''));\r\n    });\r\n\r\n    // ========================================================================\r\n    // AGREGAR EMPLEADOS SELECCIONADOS\r\n    // ========================================================================\r\n    $('#btn-confirm-add-employees').on('click', async function () {\r\n        assertAlerts();\r\n\r\n        const selected: number[] = [];\r\n        $('#tbody-available-employees input.employee-checkbox:checked').each(function () {\r\n            selected.push($(this).data('recid'));\r\n        });\r\n\r\n        if (selected.length === 0) {\r\n            A.warn('Debe seleccionar al menos un empleado', 'Advertencia');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            for (const empRecId of selected) {\r\n                const resp = await fetchJson(`${apiBase}/CourseEmployees`, {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        CourseRefRecID: recId,\r\n                        EmployeeRefRecID: empRecId,\r\n                        Comment: '',\r\n                        Observations: ''\r\n                    })\r\n                });\r\n                assignedEmployees.push({ EmployeeRecID: empRecId, CourseEmployeeRecID: resp.RecID });\r\n            }\r\n\r\n            renderAssignedEmployees();\r\n            $('#modal-add-employee').modal('hide');\r\n            A.ok(`Se ${selected.length === 1 ? 'agregó' : 'agregaron'} ${selected.length} empleado${selected.length > 1 ? 's' : ''} al curso`, 'Éxito');\r\n        } catch (error) {\r\n            A.error('Error al agregar empleados al curso', 'Error');\r\n        }\r\n    });\r\n\r\n    // ========================================================================\r\n    // AGREGAR POSICIONES SELECCIONADAS\r\n    // ========================================================================\r\n    $('#btn-confirm-add-positions').on('click', async function () {\r\n        assertAlerts();\r\n\r\n        const selected: number[] = [];\r\n        $('#tbody-available-positions input.position-checkbox:checked').each(function () {\r\n            selected.push($(this).data('recid'));\r\n        });\r\n\r\n        if (selected.length === 0) {\r\n            A.warn('Debe seleccionar al menos una posición', 'Advertencia');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            for (const posRecId of selected) {\r\n                const resp = await fetchJson(`${apiBase}/CoursePositions`, {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        CourseRefRecID: recId,\r\n                        PositionRefRecID: posRecId,\r\n                        Comment: '',\r\n                        Observations: ''\r\n                    })\r\n                });\r\n                assignedPositions.push({ PositionRecID: posRecId, CoursePositionRecID: resp.RecID });\r\n            }\r\n\r\n            renderAssignedPositions();\r\n            $('#modal-add-position').modal('hide');\r\n            A.ok(`Se ${selected.length === 1 ? 'agregó' : 'agregaron'} ${selected.length} posición${selected.length > 1 ? 'es' : ''} al curso`, 'Éxito');\r\n        } catch (error) {\r\n            A.error('Error al agregar posiciones al curso', 'Error');\r\n        }\r\n    });\r\n\r\n    // ========================================================================\r\n    // ELIMINAR EMPLEADO INDIVIDUAL\r\n    // ========================================================================\r\n    $(d).on('click', '.btn-delete-employee', function () {\r\n        assertAlerts();\r\n\r\n        const empRecId = $(this).data('recid');\r\n        const courseEmpRecId = $(this).data('course-employee-recid');\r\n\r\n        (w as any).ALERTS.confirm(\r\n            '¿Está seguro de eliminar este empleado del curso?',\r\n            'Confirmar Eliminación',\r\n            async (confirmed: boolean) => {\r\n                if (!confirmed) return;\r\n\r\n                try {\r\n                    await fetchJson(`${apiBase}/CourseEmployees/${courseEmpRecId}`, { method: 'DELETE' });\r\n                    assignedEmployees = assignedEmployees.filter(e => e.EmployeeRecID !== empRecId);\r\n                    renderAssignedEmployees();\r\n                    A.ok('El empleado ha sido eliminado del curso', 'Éxito');\r\n                } catch (error) {\r\n                    A.error('Error al eliminar el empleado del curso', 'Error');\r\n                }\r\n            },\r\n            { type: 'danger' }\r\n        );\r\n    });\r\n\r\n    // ========================================================================\r\n    // ELIMINAR POSICIÓN INDIVIDUAL\r\n    // ========================================================================\r\n    $(d).on('click', '.btn-delete-position', function () {\r\n        assertAlerts();\r\n\r\n        const posRecId = $(this).data('recid');\r\n        const coursePosRecId = $(this).data('course-position-recid');\r\n\r\n        (w as any).ALERTS.confirm(\r\n            '¿Está seguro de eliminar esta posición del curso?',\r\n            'Confirmar Eliminación',\r\n            async (confirmed: boolean) => {\r\n                if (!confirmed) return;\r\n\r\n                try {\r\n                    await fetchJson(`${apiBase}/CoursePositions/${coursePosRecId}`, { method: 'DELETE' });\r\n                    assignedPositions = assignedPositions.filter(p => p.PositionRecID !== posRecId);\r\n                    renderAssignedPositions();\r\n                    A.ok('La posición ha sido eliminada del curso', 'Éxito');\r\n                } catch (error) {\r\n                    A.error('Error al eliminar la posición del curso', 'Error');\r\n                }\r\n            },\r\n            { type: 'danger' }\r\n        );\r\n    });\r\n\r\n    // ========================================================================\r\n    // ELIMINAR EMPLEADOS MÚLTIPLES\r\n    // ========================================================================\r\n    $('#btn-delete-selected-employees').on('click', function () {\r\n        assertAlerts();\r\n\r\n        const toDelete: { EmployeeRecID: number; CourseEmployeeRecID: number }[] = [];\r\n        $('#tbody-course-employees input.assigned-employee-checkbox:checked').each(function () {\r\n            const found = assignedEmployees.find(e => e.EmployeeRecID === $(this).data('recid'));\r\n            if (found) toDelete.push(found);\r\n        });\r\n\r\n        if (toDelete.length === 0) return;\r\n\r\n        const message = toDelete.length === 1\r\n            ? '¿Está seguro de eliminar este empleado del curso?'\r\n            : `¿Está seguro de eliminar los ${toDelete.length} empleados seleccionados del curso?`;\r\n\r\n        (w as any).ALERTS.confirm(\r\n            message,\r\n            'Confirmar Eliminación',\r\n            async (confirmed: boolean) => {\r\n                if (!confirmed) return;\r\n\r\n                try {\r\n                    for (const item of toDelete) {\r\n                        await fetchJson(`${apiBase}/CourseEmployees/${item.CourseEmployeeRecID}`, { method: 'DELETE' });\r\n                    }\r\n                    assignedEmployees = assignedEmployees.filter(e => !toDelete.some(d => d.EmployeeRecID === e.EmployeeRecID));\r\n                    renderAssignedEmployees();\r\n                    A.ok(`Se ${toDelete.length === 1 ? 'eliminó' : 'eliminaron'} ${toDelete.length} empleado${toDelete.length > 1 ? 's' : ''} del curso`, 'Éxito');\r\n                } catch (error) {\r\n                    A.error('Error al eliminar los empleados del curso', 'Error');\r\n                }\r\n            },\r\n            { type: 'danger' }\r\n        );\r\n    });\r\n\r\n    // ========================================================================\r\n    // ELIMINAR POSICIONES MÚLTIPLES\r\n    // ========================================================================\r\n    $('#btn-delete-selected-positions').on('click', function () {\r\n        assertAlerts();\r\n\r\n        const toDelete: { PositionRecID: number; CoursePositionRecID: number }[] = [];\r\n        $('#tbody-course-positions input.assigned-position-checkbox:checked').each(function () {\r\n            const found = assignedPositions.find(p => p.PositionRecID === $(this).data('recid'));\r\n            if (found) toDelete.push(found);\r\n        });\r\n\r\n        if (toDelete.length === 0) return;\r\n\r\n        const message = toDelete.length === 1\r\n            ? '¿Está seguro de eliminar esta posición del curso?'\r\n            : `¿Está seguro de eliminar las ${toDelete.length} posiciones seleccionadas del curso?`;\r\n\r\n        (w as any).ALERTS.confirm(\r\n            message,\r\n            'Confirmar Eliminación',\r\n            async (confirmed: boolean) => {\r\n                if (!confirmed) return;\r\n\r\n                try {\r\n                    for (const item of toDelete) {\r\n                        await fetchJson(`${apiBase}/CoursePositions/${item.CoursePositionRecID}`, { method: 'DELETE' });\r\n                    }\r\n                    assignedPositions = assignedPositions.filter(p => !toDelete.some(d => d.PositionRecID === p.PositionRecID));\r\n                    renderAssignedPositions();\r\n                    A.ok(`Se ${toDelete.length === 1 ? 'eliminó' : 'eliminaron'} ${toDelete.length} posición${toDelete.length > 1 ? 'es' : ''} del curso`, 'Éxito');\r\n                } catch (error) {\r\n                    A.error('Error al eliminar las posiciones del curso', 'Error');\r\n                }\r\n            },\r\n            { type: 'danger' }\r\n        );\r\n    });\r\n\r\n    // ========================================================================\r\n    // EVENTOS - ICHECK TOGGLES\r\n    // ========================================================================\r\n    $(d).on('ifChanged', '.assigned-employee-checkbox', function () {\r\n        $('#btn-delete-selected-employees').prop('disabled',\r\n            $('#tbody-course-employees input.assigned-employee-checkbox:checked').length === 0);\r\n    });\r\n\r\n    $(d).on('ifChanged', '.assigned-position-checkbox', function () {\r\n        $('#btn-delete-selected-positions').prop('disabled',\r\n            $('#tbody-course-positions input.assigned-position-checkbox:checked').length === 0);\r\n    });\r\n\r\n    $(d).on('ifChanged', '#check-all-modal-employees', function () {\r\n        $('.employee-checkbox').iCheck($(this).is(':checked') ? 'check' : 'uncheck');\r\n    });\r\n\r\n    $(d).on('ifChanged', '#check-all-modal-positions', function () {\r\n        $('.position-checkbox').iCheck($(this).is(':checked') ? 'check' : 'uncheck');\r\n    });\r\n\r\n    $(d).on('ifChanged', '#check-all-employees', function () {\r\n        $('.assigned-employee-checkbox').iCheck($(this).is(':checked') ? 'check' : 'uncheck');\r\n    });\r\n\r\n    $(d).on('ifChanged', '#check-all-positions', function () {\r\n        $('.assigned-position-checkbox').iCheck($(this).is(':checked') ? 'check' : 'uncheck');\r\n    });\r\n\r\n    // ========================================================================\r\n    // INICIALIZACIÓN\r\n    // ========================================================================\r\n    $(async function () {\r\n        try {\r\n            await Promise.all([loadAllEmployees(), loadAllPositions()]);\r\n            await loadAssignedData();\r\n        } catch (error) {\r\n            A.error('Error al inicializar el módulo de empleados y posiciones', 'Error de Inicialización');\r\n        }\r\n    });\r\n})();"]}