@* ============================================================================
   Archivo: _Modal.cshtml
   Proyecto: RH365 (Front-End MVC .NET 8)
   Ruta: Views/Generic/Partials/_Modal.cshtml
   Descripción: Modal genérico (Bootstrap) reutilizable para ListPage/FormPage.
     - Soporta tamaño (sm/md/lg/xl), título dinámico y contenido inyectado.
     - Emite eventos JS para que el TS controle submit/cancel.
   Notas:
     - Incluir este partial donde se necesite: @await Html.PartialAsync("Generic/Partials/_Modal")
     - El contenido dinámico se monta en #glp-modal-body vía JS.
   ============================================================================ *@
<div class="modal fade" id="glp-modal" tabindex="-1" aria-hidden="true" aria-labelledby="glp-modal-title" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-scrollable modal-lg" id="glp-modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title mb-0" id="glp-modal-title">Título</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>

            <div class="modal-body" id="glp-modal-body">
                @* El contenido (formulario/confirmación) se inyecta por JS *@
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" id="glp-modal-cancel" data-bs-dismiss="modal">
                    Cancelar
                </button>
                <button type="button" class="btn btn-primary" id="glp-modal-accept">
                    Aceptar
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // =========================================================================
        // Bootstrap básico del modal genérico
        // - window.GLP_MODAL.open({ title, size, html, onAccept, onCancel })
        // - size: 'sm' | 'md' | 'lg' | 'xl'  (por defecto 'lg')
        // =========================================================================
        (function(){
          const $el = document.getElementById('glp-modal');
          const $dialog = document.getElementById('glp-modal-dialog');
          const $title = document.getElementById('glp-modal-title');
          const $body  = document.getElementById('glp-modal-body');
          const $btnOk = document.getElementById('glp-modal-accept');
          const $btnCancel = document.getElementById('glp-modal-cancel');
          let bsModal = null, onAccept = null, onCancel = null;

          function setSize(sz){
            $dialog.classList.remove('modal-sm','modal-lg','modal-xl');
            if (sz === 'sm') $dialog.classList.add('modal-sm');
            else if (sz === 'lg') $dialog.classList.add('modal-lg');
            else if (sz === 'xl') $dialog.classList.add('modal-xl');
          }

          window.GLP_MODAL = {
            open: ({ title = 'Acción', size = 'lg', html = '', onAccept:ok, onCancel:ko } = {}) => {
              $title.textContent = title;
              $body.innerHTML = html;
              setSize(size);
              onAccept = typeof ok === 'function' ? ok : null;
              onCancel = typeof ko === 'function' ? ko : null;
              bsModal = bsModal || new bootstrap.Modal($el);
              bsModal.show();
            },
            close: () => { if (bsModal) bsModal.hide(); }
          };

          $btnOk.addEventListener('click', () => {
            if (onAccept) { if (onAccept() !== false) window.GLP_MODAL.close(); }
            else window.GLP_MODAL.close();
          });
          $btnCancel.addEventListener('click', () => { if (onCancel) onCancel(); });
          $el.addEventListener('hidden.bs.modal', () => {
            // Limpieza mínima
            $body.innerHTML = '';
            onAccept = onCancel = null;
          });
        })();
    </script>
}
