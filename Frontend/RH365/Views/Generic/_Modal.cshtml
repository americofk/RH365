@* ============================================================================
   Archivo: _Modal.cshtml
   Proyecto: RH365.WebMVC
   Ruta: Views/Generic/_Modal.cshtml
   Descripción: 
       - Modal genérico reutilizable (Bootstrap 3 - Gentelella)
       - Soporta confirmaciones, formularios, y contenido dinámico
       - API: window.GLP_MODAL.open() y window.ALERTS.confirm()
   ============================================================================ *@

<!-- Modal Genérico -->
<div class="modal fade" id="glp-modal" tabindex="-1" role="dialog" aria-labelledby="glp-modal-title">
    <div class="modal-dialog modal-lg" id="glp-modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="glp-modal-title">Título</h4>
            </div>

            <div class="modal-body" id="glp-modal-body">
                <!-- El contenido se inyecta dinámicamente por JavaScript -->
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="glp-modal-cancel" data-dismiss="modal">
                    <i class="fa fa-times"></i> Cancelar
                </button>
                <button type="button" class="btn btn-primary" id="glp-modal-accept">
                    <i class="fa fa-check"></i> Aceptar
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    // =========================================================================
    // Sistema de Modal Genérico (Bootstrap 3 - Gentelella)
    // API: window.GLP_MODAL.open({ title, size, html, onAccept, onCancel })
    // =========================================================================
    (function () {
        const $el = $('#glp-modal');
        const $dialog = $('#glp-modal-dialog');
        const $title = $('#glp-modal-title');
        const $body = $('#glp-modal-body');
        const $btnOk = $('#glp-modal-accept');
        const $btnCancel = $('#glp-modal-cancel');

        let onAcceptCallback = null;
        let onCancelCallback = null;

        // Cambiar tamaño del modal
        function setSize(size) {
            $dialog.removeClass('modal-sm modal-lg');
            if (size === 'sm') {
                $dialog.addClass('modal-sm');
            } else if (size === 'lg') {
                $dialog.addClass('modal-lg');
            }
        }

        // API pública del modal
        window.GLP_MODAL = {
            // Abre el modal con configuración personalizada
            // opts: { title, size, html, onAccept, onCancel, acceptText, cancelText, acceptClass }
            open: function (opts) {
                opts = opts || {};
                const title = opts.title || 'Acción';
                const size = opts.size || 'lg';
                const html = opts.html || '';
                const acceptText = opts.acceptText || '<i class="fa fa-check"></i> Aceptar';
                const cancelText = opts.cancelText || '<i class="fa fa-times"></i> Cancelar';
                const acceptClass = opts.acceptClass || 'btn-primary';

                // Configurar contenido
                $title.text(title);
                $body.html(html);
                setSize(size);

                // Configurar botones
                $btnOk.html(acceptText);
                $btnOk.removeClass('btn-primary btn-success btn-danger btn-warning').addClass(acceptClass);
                $btnCancel.html(cancelText);

                // Guardar callbacks
                onAcceptCallback = typeof opts.onAccept === 'function' ? opts.onAccept : null;
                onCancelCallback = typeof opts.onCancel === 'function' ? opts.onCancel : null;

                // Mostrar modal (Bootstrap 3)
                $el.modal('show');
            },

            // Cierra el modal
            close: function () {
                $el.modal('hide');
            }
        };

        // Event handler para botón Aceptar
        $btnOk.off('click').on('click', function () {
            if (onAcceptCallback) {
                const result = onAcceptCallback();
                // Si el callback retorna false, no cerrar el modal
                if (result !== false) {
                    window.GLP_MODAL.close();
                }
            } else {
                window.GLP_MODAL.close();
            }
        });

        // Event handler para botón Cancelar
        $btnCancel.off('click').on('click', function () {
            if (onCancelCallback) {
                onCancelCallback();
            }
        });

        // Limpiar al cerrar el modal
        $el.on('hidden.bs.modal', function () {
            $body.html('');
            onAcceptCallback = null;
            onCancelCallback = null;
        });
    })();

    // =========================================================================
    // Extensión de ALERTS para usar el modal como confirmación
    // API: window.ALERTS.confirm(message, title, callback, opts)
    // =========================================================================
    (function () {
        if (typeof window.ALERTS === 'undefined') {
            window.ALERTS = {};
        }

        // Muestra un diálogo de confirmación
        // callback recibe: callback(confirmed) donde confirmed es boolean
        window.ALERTS.confirm = function (message, title, callback, opts) {
            opts = opts || {};
            title = title || 'Confirmación';
            const type = opts.type || 'warning';
            const confirmText = opts.confirmText || '<i class="fa fa-check"></i> Aceptar';
            const cancelText = opts.cancelText || '<i class="fa fa-times"></i> Cancelar';

            // Icono según el tipo
            let icon = 'fa-question-circle';
            let iconClass = 'text-warning';
            let btnClass = 'btn-primary';

            if (type === 'danger') {
                icon = 'fa-exclamation-triangle';
                iconClass = 'text-danger';
                btnClass = 'btn-danger';
            } else if (type === 'warning') {
                icon = 'fa-exclamation-circle';
                iconClass = 'text-warning';
                btnClass = 'btn-warning';
            } else if (type === 'info') {
                icon = 'fa-info-circle';
                iconClass = 'text-info';
                btnClass = 'btn-info';
            }

            const html = '<div class="text-center" style="padding: 20px;">' +
                         '<i class="fa ' + icon + ' ' + iconClass + '" style="font-size: 64px; margin-bottom: 20px;"></i>' +
                         '<p style="font-size: 16px;">' + message + '</p>' +
                         '</div>';

            window.GLP_MODAL.open({
                title: title,
                size: 'sm',
                html: html,
                acceptText: confirmText,
                cancelText: cancelText,
                acceptClass: btnClass,
                onAccept: function () {
                    if (typeof callback === 'function') {
                        callback(true);
                    }
                },
                onCancel: function () {
                    if (typeof callback === 'function') {
                        callback(false);
                    }
                }
            });
        };

        // Confirmación de eliminación (atajo)
        // callback recibe: callback(confirmed) donde confirmed es boolean
        window.ALERTS.confirmDelete = function (itemName, callback) {
            const msg = '¿Está seguro que desea eliminar <strong>' + itemName + '</strong>?<br>' +
                       '<small class="text-muted">Esta acción no se puede deshacer.</small>';

            window.ALERTS.confirm(
                msg,
                'Confirmar Eliminación',
                callback,
                {
                    type: 'danger',
                    confirmText: '<i class="fa fa-trash"></i> Eliminar',
                    cancelText: '<i class="fa fa-times"></i> Cancelar'
                }
            );
        };
    })();
</script>